<script language="javascript">
var STATIC_RT_PARA = new Array(
"Enable",
"Status",
"StaticRoute",
"Type",
"DestIP",
"PrefixLen",
"GWIP",
"Interface",
"ForwardingMetric",
"MTU"
);
var STATIC_PARA = new Array(
"Interfacename",
"DestIP",
"GWIP",
"Status"
);
var index ="";
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
OldProcessRet(errstr, errpara);
moveErrLayer(580,75);
showTable();
}
function getInput(value,len)
{
return ("<input class=\"uiNoBorder\"  type=\"text\"  size=\""
+len
+"\" value=\""
+HTMLEnCode(value)
+"\" readonly>");
}
function addline(index)
{
var newline = getObj("Static_rt_Table").insertRow(-1);
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
for(var i = 0; i < STATIC_PARA.length ; i++)
{
if("Interfacename" == STATIC_PARA[i])
{
newline.insertCell(-1).innerHTML =
getInput(getValue(STATIC_PARA[i]+index),6);
}
else if("GWIP" == STATIC_PARA[i])
{
if (getValue("GWIP"+index)=="::")
{
newline.insertCell(-1).innerHTML="";
}
else
{
newline.insertCell(-1).innerHTML =
getValue(STATIC_PARA[i]+index);
}
}
else if("DestIP" == STATIC_PARA[i])
{
newline.insertCell(-1).innerHTML = getValue(STATIC_PARA[i]+index)
+"/"
+getValue("PrefixLen"+index);
}
else if("Status" == STATIC_PARA[i])
{
if (getValue(STATIC_PARA[i]+index)=="Enabled")
{
newline.insertCell(-1).innerHTML = showIsEnableImage("1", "");
}
else
{
newline.insertCell(-1).innerHTML = showIsEnableImage("0", "");
}
}
}
newline.insertCell(-1).innerHTML=getImagefrmClass("multiImg_modify",
"Modify("+index+")","Btn_Modify"+index);
newline.insertCell(-1).innerHTML=getImagefrmClass("multiImg_delete",
"Delete("+index+")","Btn_Delete"+index);
}
function showTable()
{
var num = getValue("IF_INSTNUM");
if(num == 0)
{
var newline = getObj("Static_rt_Table").insertRow(-1);
newline.setAttribute("align", "center");
newline.setAttribute("class", "white");
newline.setAttribute("className", "white");
var objcell =  newline.insertCell(-1);
objcell.colSpan = 6;
objcell.innerHTML= "&?note_007;";
}
for(var i = 0; i < num; i++)
{
addline(i);
}
}
function getmsg(id)
{
var str  = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(108, "&?error_108;");
str[2]   = new Array(109, "&?error_109;");
str[3]   = new Array(118, "&?error_118;");
str[4]   = new Array(119, "&?error_119;");
str[5]   = new Array(122, "&?error_122;");
str[6]   = new Array(130, "&?error_130;");
str[7]   = new Array(127, "&?error_127;");
str[8]   = new Array(115, "&?error_115;");
str[9]   = new Array(116, "&?error_116;");
str[10]  = new Array(117, "&?error_117;");
str[11]  = new Array(200, "&?error_200;");
str[12]  = new Array(203, "&?error_203;");
str[13]  = new Array(204, "&?error_204;");
str[14]  = new Array(205, "&?error_205;");
return getMsgFormArray(str, arguments);
}
function pageSetValue()
{
HiddenParaInit(STATIC_RT_PARA);
setValue("Enable","1");
jslSetValue("Interface", "Frm_Interface");
jslSetValue("DestIP", "Frm_DestIP");
if(getValue("Frm_PrefixLen") == "128")
{
setValue("Type","Host");
}
else if(getValue("Frm_PrefixLen") == "0")
{
setValue("Type","Default");
}
else
{
setValue("Type","Network");
}
jslSetValue("PrefixLen", "Frm_PrefixLen");
if (getValue("Frm_GWIP") =="")
{
setValue("GWIP", "::");
}
else
{
jslSetValue("GWIP", "Frm_GWIP");
}
}
function pageCheckValue()
{
if(Check_PrefixValue("Frm_DestIP", "Fnt_DestIP", "Frm_PrefixLen", 0, 128) != true)
{
return false;
}
if( false == checkIPV6Address(getValue("Frm_GWIP"))
&&  getValue("Frm_GWIP")!="")
{
msg = getmsg(200);
ShowErrorForCom("Frm_GWIP", "Fnt_GWIP", msg);
return false;
}
if (getValue("Frm_GWIP")=="::")
{
msg = getmsg(205);
ShowErrorForCom("Frm_GWIP", null, msg);
return false;
}
return true;
}
function pageReFresh()
{
DisableALL();
getObj("fSubmit").submit();
}
function Add()
{
var num = getValue("IF_INSTNUM");
document.getElementById("Btn_Add").style.display="";
document.getElementById("Btn_Modify").style.display="none";
if(pageCheckValue() == true )
{
pageSetValue();
setValue("IF_ACTION", "new");
setValue("IF_INDEX", "-1");
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function ModifyGetValue(i)
{
jslSetValue("Frm_Interface", "Interface"+i);
jslSetValue("Frm_DestIP", "DestIP"+i);
jslSetValue("Frm_PrefixLen", "PrefixLen"+i);
if (getValue("GWIP"+i)=="::")
{
setValue("Frm_GWIP", "");
}
else
{
setValue("Frm_GWIP", getIPToNULL(getValue("GWIP"+i)));
}
}
function Modify(i)
{
document.getElementById("Btn_Add").style.display="none";
document.getElementById("Btn_Modify").style.display="";
document.getElementById("back").style.display="";
ModifyGetValue(i);
index=i;
}
function Delete(i)
{
var num = getValue("IF_INSTNUM");
setValue("IF_ACTION", "delete");
setValue("IF_INDEX",i);
DisableALL();
getObj("fSubmit").submit();
}
function ModifySubmit()
{
var num = getValue("IF_INSTNUM");
for(i = 0; i < num; i++)
{
jslDisable("Btn_Delete" + i,"Btn_Modify" + i);
}
if(pageCheckValue() == true)
{
jslDisable("Btn_Add","Btn_Modify", "back");
pageSetValue();
setValue("IF_ACTION", "apply");
setValue("IF_INDEX",index);
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function back4add()
{
var number = getValue("IF_INSTNUM");
DisableALL();
getObj("fSubmit").submit();
}
function Check_PrefixValue(FrmPrefix, FntPrefix, FrmPrefixLen, min, max)
{
var msg;
var prefixValue = getValue(FrmPrefix);
var prefixLenValue = getValue(FrmPrefixLen);
if(false == checkNull(prefixValue))
{
msg = getmsg(101);
ShowErrorForCom(FrmPrefix, FntPrefix, msg);
return false;
}
if(false == checkNull(prefixLenValue))
{
msg = getmsg(101);
ShowErrorForCom(FrmPrefixLen, "&?ipv6_wan012;", msg);
return false;
}
if((false == checkIPV6Address(prefixValue)))
{
msg = getmsg(200);
ShowErrorForCom(FrmPrefix, FntPrefix, msg);
return false;
}
var ret = checkIntegerRange(prefixLenValue, min, max);
if(-2 == ret)
{
msg = getmsg(115);
ShowErrorForCom(FrmPrefixLen, "&?ipv6_wan012;", msg);
return false;
}
else if(-3 == ret)
{
msg = getmsg(116, min, max);
ShowErrorForCom(FrmPrefixLen, "&?ipv6_wan012;", msg);
return false;
}
if (prefixLenValue==0 && prefixValue!="::")
{
msg = getmsg(203);
ShowErrorForCom(FrmPrefixLen, null, msg);
return false;
}
if (prefixLenValue!=0 && prefixValue=="::")
{
msg = getmsg(204);
ShowErrorForCom(FrmPrefixLen, null, msg);
return false;
}
return true;
}
</script>
