<%
function wanGetUpLink()
{
return getenv("TypeValue");
}
function wanGetObjName()
{
var objName = "OBJ_ALLWANC_ID";
return objName;
}
function wanOption(identity)
{
var OptionIp46Attr = 0;
var IpMode = get_IPMode(identity);
switch (IpMode)
{
case "1":
OptionIp46Attr = 1;
break;
case "2":
OptionIp46Attr = 2;
break;
case "3":
OptionIp46Attr = 3;
break;
default:
break;
}
var WANLAN_HANDLE = create_paralist();
get_inst(WANLAN_HANDLE, "OBJ_WANLAN_ID", identity);
var WANLAN_name = get_para(WANLAN_HANDLE, "Name");
var HTMLStr = "<option value=\"" + identity
+ "\" ipmode=\"" + OptionIp46Attr + "\" >"
+ encodeHTML(WANLAN_name) + "</option>";
destroy_paralist(WANLAN_HANDLE);
return HTMLStr;
}
function wanQuery()
{
var FP_INSTNUM = "";
var FP_OBJNAME = wanGetObjName();
var identity   = "";
FP_INSTNUM = query_list(FP_OBJNAME, "IGD");
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
=wanOption(identity);
}
}
function wanV4Query()
{
var FP_INSTNUM = "";
var FP_OBJNAME = wanGetObjName();
var identity   = "";
var IpMode     = "";
FP_INSTNUM = query_list(FP_OBJNAME, "IGD");
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
IpMode   = get_IPMode(identity);
if (IpMode != "2")
{
=wanOption(identity);
}
}
}
function wanQueryByApp(appName)
{
var FP_INSTNUM = "";
var identity   = "";
var WANLAN_HANDLE     = null;
var WANLAN_name       = "";
var IpMode            = "";
FP_INSTNUM = query_list("OBJ_LISTWANC_ID", appName);
if(FP_INSTNUM >= 1 && FP_INSTNUM != 888)
{
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
IpMode   = get_IPMode(identity);
if ( 0 == getenv("DevIPv6Effect") )
{
if (IpMode != "2")
{
=wanOption(identity);
}
}
else
{
=wanOption(identity);
}
}
}
}
function wanV4QueryByApp(appName)
{
var FP_INSTNUM = "";
var identity   = "";
var WANLAN_HANDLE     = null;
var WANLAN_name       = "";
var IpMode            = "";
FP_INSTNUM = query_list("OBJ_LISTWANC_ID", appName);
if(FP_INSTNUM >= 1 && FP_INSTNUM != 888)
{
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
IpMode   = get_IPMode(identity);
var WANLAN_HANDLE = create_paralist();
get_inst(WANLAN_HANDLE, "OBJ_WANLAN_ID", identity);
var WANLAN_name = get_para(WANLAN_HANDLE, "Name");
destroy_paralist(WANLAN_HANDLE);
if(((getenv("CurrentVersionInfo") == "41") || (getenv("CurrentVersionInfo") == "84")) && (getenv("Right") == "2"))
{
if(WANLAN_name != "omci_ipv4_dhcp_1" )
{
continue;
}
}
if (IpMode != "2")
{
=wanOption(identity);
}
}
}
}
function wanV6QueryByApp(appName)
{
var FP_INSTNUM = "";
var identity   = "";
var WANLAN_HANDLE     = null;
var WANLAN_name       = "";
var IpMode            = "";
FP_INSTNUM = query_list("OBJ_LISTWANC_ID", appName);
if(FP_INSTNUM >= 1 && FP_INSTNUM != 888)
{
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
IpMode   = get_IPMode(identity);
if (IpMode != "1")
{
=wanOption(identity);
}
}
}
}
function Tunnel46QueryByApp(appName)
{
var identity       = "";
var name           = "";
var TUN_HANDLE     = null;
if ( 0 != getenv("DevIPv6Effect") )
{
var TUN_INSTNUM = query_list("OBJ_TUNNEL_ID", "IGD");
if(TUN_INSTNUM >= 1 && TUN_INSTNUM != 888)
{
for(var i = 0; i < TUN_INSTNUM; i++ )
{
identity = query_identity(i);
name     = query_name(i);
="<option value='" + identity + "' >" + encodeHTML(name) + "</option>";
}
}
}
}
function Tunnel64Query()
{
if ( 0 != getenv("DevIPv6Effect") )
{
var T64INSTNUM = query_list("OBJ_6IN4TUNL_ID", "IGD");
if(T64INSTNUM >= 1 && T64INSTNUM != 888)
{
for(var i = 0; i < T64INSTNUM; i++ )
{
var identity = query_identity(i);
var name     = query_name(i);
="<option value='" + identity + "' >" + encodeHTML(name) + "</option>";
}
}
}
}
function LANQueryAsList(LANNameIDList)
{
var FP_INSTNUM  = query_list("OBJ_WANLAN_ID", "IGD");
var FP_HANDLE;
var identity    = "";
var LAN_BRType  = "";
var LAN_Type    = "";
var WLname      = "";
for (var i=0; i<FP_INSTNUM; i++)
{
identity = query_identity(i);
FP_HANDLE = create_paralist();
get_inst(FP_HANDLE, "OBJ_WANLAN_ID", identity);
LAN_BRType= get_para(FP_HANDLE, "BRType");
LAN_Type  = get_para(FP_HANDLE, "WANLANType");
WLname    = get_para(FP_HANDLE, "Name");
destroy_paralist(FP_HANDLE);
if(LAN_BRType == "0" && LAN_Type == "2")
{
set_para(LANNameIDList, WLname, identity);
}
}
}
function LANQuery()
{
var LANCount    = 0;
var LANName     = "";
var LANID       = "";
var FP_HANDLE   = create_paralist();
LANQueryAsList(FP_HANDLE);
LANCount = query_paracount(FP_HANDLE);
for (var i=0; i<LANCount; i++)
{
LANName = query_paraname(FP_HANDLE, i);
LANID = query_paravalue(FP_HANDLE, i);
="<option value='" + LANID + "' >" + LANName + "</option>";
}
destroy_paralist(FP_HANDLE);
}
function ETHLANQuery()
{
var LANCount    = 0;
var LANName     = "";
var LANID       = "";
var FP_HANDLE   = create_paralist();
LANQueryAsList(FP_HANDLE);
LANCount = query_paracount(FP_HANDLE);
for (var i=0; i<LANCount; i++)
{
LANName = query_paraname(FP_HANDLE, i);
LANID = query_paravalue(FP_HANDLE, i);
if (strstr(LANName, 0, "LAN") >= 0)
{
="<option value='" + LANID + "' >" + LANName + "</option>";
}
}
destroy_paralist(FP_HANDLE);
}
function UpIFQuery()
{
var RealIFName;
var optionVal;
var ethFlg = 0;
var ptmFlg = 0;
var FP_INSTNUM = query_list("OBJ_WANCD_ID", "IGD");
for(var i = 0; i < FP_INSTNUM; i++ )
{
var identity = query_identity(i);
var index = strget(identity, 6);
if (index == 49)
{
var dsl_identity = identity + ".fordel";
var XDSL_HANDLE=create_paralist();
get_inst(XDSL_HANDLE, "OBJ_XDSLMODE_ID", dsl_identity);
var xdslMode = get_para(XDSL_HANDLE, "xdslModeValue");
destroy_paralist(XDSL_HANDLE);
if (xdslMode == "1")
{
var ATM_HANDLE = create_paralist();
get_inst(ATM_HANDLE, "OBJ_ATM_ID", identity);
var pvc = get_para(ATM_HANDLE, "Destination_address");
destroy_paralist(ATM_HANDLE);
RealIFName = "nas(" + pvc + ")";
optionVal = identity;
}
else if (xdslMode == "2")
{
if (ptmFlg == 1)
{
continue;
}
else
{
RealIFName = "ptm";
optionVal = identity;
ptmFlg = 1;
}
}
else
{
continue;
}
}
else if (index == 50)
{
if (ethFlg == 1)
{
continue;
}
else
{
RealIFName = "WAN";
optionVal = "WAN";
ethFlg = 1;
}
}
else
{
continue;
}
="<option value='" + optionVal + "' >" + RealIFName + "</option>";
}
}
function wanQueryByAppForRds(appName)
{
var FP_INSTNUM = "";
var identity   = "";
var WANLAN_HANDLE     = null;
var WANLAN_name       = "";
var IpMode            = "";
var type              = "";
FP_INSTNUM = query_list("OBJ_LISTWANC_ID", appName);
if(FP_INSTNUM >= 1 && FP_INSTNUM != 888)
{
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
IpMode   = get_IPMode(identity);
query_list("OBJ_ALLWANC_ID", "IGD");
var WANC_HANDLE = create_paralist();
type    = query_wanctype(i);
destroy_paralist(WANC_HANDLE);
if(! checkInternetWAN(type,identity))
continue;
if ( 0 == getenv("DevIPv6Effect") )
{
if (IpMode != "2")
{
=wanOption(identity);
}
}
else
{
=wanOption(identity);
}
}
}
}
function wanV4QueryByAppForRds(appName)
{
var FP_INSTNUM = "";
var identity   = "";
var WANLAN_HANDLE     = null;
var WANLAN_name       = "";
var IpMode            = "";
var type              = "";
FP_INSTNUM = query_list("OBJ_LISTWANC_ID", appName);
if(FP_INSTNUM >= 1 && FP_INSTNUM != 888)
{
for(var i = 0; i < FP_INSTNUM; i++ )
{
identity = query_identity(i);
query_list("OBJ_ALLWANC_ID", "IGD");
var WANC_HANDLE = create_paralist();
type    = query_wanctype(i);
destroy_paralist(WANC_HANDLE);
if(! checkInternetWAN(type,identity))
continue;
IpMode   = get_IPMode(identity);
if (IpMode != "2")
{
=wanOption(identity);
}
}
}
}
function checkInternetWAN(type,identity)
{
if(type == "pppoe")
{
var PPP_HANDLE = create_paralist();
get_inst(PPP_HANDLE, "OBJ_ETHWANCPPP_ID", identity);
var PPP_ServList = get_para(PPP_HANDLE, "ServList");
destroy_paralist(PPP_HANDLE);
if(PPP_ServList == 1)
{
return 1;
}
}
if(type == "dhcp/static")
{
var IP_HANDLE = create_paralist();
get_inst(IP_HANDLE, "OBJ_ETHWANCIP_ID", identity);
var IP_ServList = get_para(IP_HANDLE, "ServList");
destroy_paralist(IP_HANDLE);
if(IP_ServList == 1)
{
return 1;
}
}
if(type == "bridge")
{
var BRIDGE_HANDLE = create_paralist();
get_inst(BRIDGE_HANDLE, "OBJ_ETHWANCBRIDGE_ID", identity);
var BRIDGE_ServList = get_para(BRIDGE_HANDLE, "ServList");
destroy_paralist(BRIDGE_HANDLE);
if(BRIDGE_ServList == 1)
{
return 1;
}
}
return 0;
}
%>