
<script language="javascript">
var PSK_PARA = new Array(
"PreSharedKey",
"KeyPassphrase",
"AssociatedDeviceMACAddress"
);
var CONFIG_PARA = new Array(
"Enable",
"RadioStatus",
"Standard",
"BeaconInterval",
"RtsCts",
"Fragment",
"DTIM",
"TxPower",
"CountryCode",
"TxRate",
"Channel",
"ESSID",
"ESSIDPrefix",
"ACLPolicy",
"BeaconType",
"WEPAuthMode",
"WEPEncryptionLevel",
"WEPKeyIndex",
"WPAAuthMode",
"WPAEncryptType",
"WPAGroupRekey",
"WPAEAPServerIp",
"RadiusPort",
"RadiusServerPort",
"WPAEAPSecret",
"PossibleChannels",
"BasicDataRates",
"OpDataRates",
"PossibleTxRates",
"OOBAccessEnabled",
"BeaconEnabled",
"ESSIDHideEnable",
"RegulatoryDomain",
"WlanMode",
"DistanceFromRoot",
"PeerBSSID",
"AuthServiceMode",
"QosType",
"Priority",
"UAPSDEnabled",
"AutoChannelEnabled",
"ChannelsInUse",
"11iAuthMode",
"11iEncryptType"
);
var WEPKEY_PARA = new Array(
"WEPKey"
);
var EAP_PARA =new Array(
"MasterAuthServerIP",
"MasterAuthServerPort",
"MasterAuthServerSecret",
"MasterAcctServerIP",
"MasterAcctServerPort",
"MasterAcctServerSecret",
"BackupAuthServerIP",
"BackupAuthServerPort",
"BackupAuthServerSecret",
"BackupAcctServerIP",
"BackupAcctServerPort",
"BackupAcctServerSecret",
"ReauthPeriod",
"PreAuth"
,
"EapWanc"
);
var getFlag = "";
var setFlag = "";
<%
var userright = getenv("Right");
var cver = getenv("CurrentVersionInfo");
if(cver == 85)
{
%>
getFlag = "GET";
setFlag = "SET";
<%
}
%>
function getmsg(id)
{
var str  = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(102, "&?error_102;");
str[2]   = new Array(103, "&?error_103;");
str[3]   = new Array(114, "&?error_114;");
str[4]   = new Array(115, "&?error_115;");
str[5]   = new Array(116, "&?error_116;");
str[6]   = new Array(117, "&?error_117;");
str[7]   = new Array(118, "&?error_118;");
str[8]   = new Array(119, "&?error_119;");
str[9]   = new Array(120, "&?error_120;");
str[10]  = new Array(122, "&?error_122;");
str[11]  = new Array(141, "&?error_141;");
str[12]  = new Array(108, "&?error_108;");
str[13]  = new Array(144, "&?error_144;");
str[14]  = new Array(230, "&?error_230;");
str[15]  = new Array(231, "&?error_231;");
return getMsgFormArray(str, arguments);
}
function Wireless_switch()
{
var tem=getValue("Frm_Authentication");
var keyobj=getObj("Frm_BeaconType");
if(getValue("RealRF") == "1")
{
tipDispCtrl();
if(tem=="Open System")
{
if(key=="Basic")
{
jslEnable("Frm_WEPKeyIndex","Frm_WEPKey0","Frm_WEPKey1","Frm_WEPKey2","Frm_WEPKey3");
}
jslEnable("Frm_BeaconType");
}
else if(tem=="Shared Key")
{
jslEnable("Frm_BeaconType","Frm_WEPKeyIndex","Frm_WEPKey0","Frm_WEPKey1","Frm_WEPKey2","Frm_WEPKey3");
}
else if(tem=="WPA-PSK"||tem=="WPA2-PSK"||tem=="WPA/WPA2-PSK")
{
jslEnable("Frm_KeyPassphrase","Frm_WPAGroupRekey","Frm_WPAEncryptType");
}
else if(tem=="WPA-EAP"||tem=="WPA2-EAP"||tem=="WPA/WPA2-EAP")
{
jslEnable("eap","Frm_WPAEncryptType");
}
jslEnable("Frm_SSID_SET","Frm_Authentication","Btn_Submit","Btn_Cancel");
}
else
{
setHTML("tipLi", "&?wlan079;");
jslEnDisplay("t_warn");
if(tem=="Open System")
{
if(key=="Basic")
{
jslDisable("Frm_WEPKeyIndex","Frm_WEPKey0","Frm_WEPKey1","Frm_WEPKey2","Frm_WEPKey3");
}
jslDisable("Frm_BeaconType");
}
else if(tem=="Shared Key")
{
jslDisable("Frm_BeaconType","Frm_WEPKeyIndex","Frm_WEPKey0",
"Frm_WEPKey1","Frm_WEPKey2","Frm_WEPKey3");
}
else if(tem=="WPA-PSK"||tem=="WPA2-PSK"||tem=="WPA/WPA2-PSK")
{
jslDisable("Frm_KeyPassphrase","Frm_WPAGroupRekey","Frm_WPAEncryptType");
}
else if(tem=="WPA-EAP"||tem=="WPA2-EAP"||tem=="WPA/WPA2-EAP")
{
jslDisable("eap","Frm_WPAEncryptType");
}
jslDisable("Frm_SSID_SET","Frm_Authentication","Btn_Submit","Btn_Cancel");
}
}
function tipDispCtrl()
{
if (getValue("Frm_Authentication") == "WAPICert")
{
setHTML("tipLi", "&?pwa14;");
jslEnDisplay("t_warn");
}
else if ( "0" == getValue("CardIsIn") )
{
setHTML("tipLi", "&?cwt024;");
jslEnDisplay("t_warn");
}
else
{
jslDiDisplay("t_warn");
}
}
function Authentication()
{
var tem=getValue("Frm_Authentication");
var keyobj=getObj("Frm_BeaconType");
var i;
tipDispCtrl();
if(tem=="Open System")
{
keyobj.length = 2;
keyobj.options[0] = new Option("&?Disabled;", "None");
keyobj.options[1] = new Option("&?wan049;", "Basic");
jslDiDisplay("eap");
jslDiDisplay("wpa","shared");
jslEnDisplay("t_wep");
}
else if(tem=="Shared Key")
{
keyobj.length = 1;
keyobj.options[0] = new Option("&?wan049;", "Basic");
jslDiDisplay("eap");
jslDiDisplay("wpa");
jslEnDisplay("shared","t_wep");
}
else if(tem=="WPA-PSK"||tem=="WPA2-PSK"||tem=="WPA/WPA2-PSK")
{
jslDiDisplay("eap");
jslDiDisplay("shared","t_wep");
jslEnDisplay("wpa","TR_KeyPassphrase","TR_KeyPassphrase");
}
else if(tem=="WPA-EAP"||tem=="WPA2-EAP"||tem=="WPA/WPA2-EAP")
{
jslDiDisplay("shared","t_wep","TR_KeyPassphrase");
jslEnDisplay("wpa","TR_WPAEncryptType","eap");
}
}
function UpdateAuthentication()
{
var tem=getValue("Frm_Authentication");
var keyobj=getObj("Frm_BeaconType");
var i;
if(tem=="Open System")
{
keyobj.length = 2;
keyobj.options[0] = new Option("&?Disabled;", "None");
keyobj.options[1] = new Option("&?wan049;", "Basic");
jslSetValue("Frm_BeaconType","BeaconType");
key=getValue("Frm_BeaconType");
if(key=="Basic")
{
jslEnDisplay("shared");
}
if(key=="None")
{
jslDiDisplay("shared");
}
jslDiDisplay("eap");
jslEnDisplay("t_wep");
jslDiDisplay("wpa");
}
else if(tem=="Shared Key")
{
keyobj.length = 1;
keyobj.options[0] = new Option("&?wan049;", "Basic");
jslSetValue("Frm_BeaconType","BeaconType");
key=getValue("Frm_BeaconType");
jslDiDisplay("eap");
jslDiDisplay("wpa");
jslEnDisplay("shared","t_wep");
}
else if(tem=="WPA-PSK"||tem=="WPA2-PSK"||tem=="WPA/WPA2-PSK")
{
jslDiDisplay("eap");
jslDiDisplay("shared","t_wep");
jslEnDisplay("wpa","TR_KeyPassphrase","TR_KeyPassphrase");
}
else if(tem=="WPA-EAP"||tem=="WPA2-EAP"||tem=="WPA/WPA2-EAP")
{
jslDiDisplay("shared","t_wep","TR_KeyPassphrase");
jslEnDisplay("wpa","eap","TR_WPAEncryptType");
}
}
function WEP_Key()
{
var tem=getValue("Frm_Authentication");
var key=getValue("Frm_BeaconType");
if(tem=="Open System")
{
if(key=="Basic")
{
jslEnDisplay("shared");
}
if(key=="None")
{
jslDiDisplay("shared");
}
}
}
function AsciiCheck(Key, LenLimit)
{
if (Key.length != LenLimit)
{
return false;
}
for (var j = 0 ;j < Key.length; j++)
{
var ch = Key.charCodeAt(j);
if (!(ch >= 0 && ch <= 255))
{
return false;
}
}
return true;
}
function HexCheck(Key, LenLimit)
{
if (Key.length != LenLimit)
{
return false;
}
for (var j = 0 ;j < Key.length; j++)
{
var ch = Key.charCodeAt(j);
if (!((ch >= 65 && ch <= 70)||(ch >= 97 && ch <= 102)
||(ch >= 48 && ch <= 57)))
{
return false;
}
}
return true;
}
function WepkeyCheck()
{
var Key, KeyLen, KeyIndex;
var AsciiLenLimit, HexLenLimit;
var i,j;
var check;
KeyIndex = getValue("Frm_WEPKeyIndex");
if (getDisplay("shared") == false)
{
return true;
}
for (i = 0; i < 4; i++ )
{
Key = getValue("Frm_WEPKey"+i);
check = checkNull(Key);
if (check == false)
{
if(i == KeyIndex-1)
{
msg = getmsg(101);
ShowErrorForCom("Frm_WEPKey"+i, "Fnt_WEPKey"+i, msg);
return false;
}
else
{
continue;
}
}
if (AsciiCheck(Key, 13) == false && HexCheck(Key, 26) == false
&& AsciiCheck(Key, 5) == false && HexCheck(Key, 10) == false)
{
msg = getmsg(120);
ShowErrorForCom("Frm_WEPKey"+i, "Fnt_WEPKey"+i, msg);
return false;
}
}
return true;
}
function checkPort(frm_id, fnt_id, isNull, minValue, maxValue)
{
var msg = "";
if( 0 == isNull && false == checkNull(getValue(frm_id)) )
{
return true;
}
var portCheck = checkIntegerRange(getValue(frm_id), minValue, maxValue);
if("-1" == portCheck)
{
msg = getmsg(101);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
if("-2" == portCheck)
{
msg = getmsg(115);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
else
if("-3" == portCheck)
{
msg = getmsg(116, minValue, maxValue);
ShowErrorForCom(frm_id, fnt_id, msg);
return false;
}
return true;
}
function KeyPassphraseCheck()
{
if(getDisplay("wpa") == false)
{
return true;
}
var value = getValue("Frm_KeyPassphrase");
var check = checkStrLengthRange(value, 8, 63);
if (check == -1)
{
msg = getmsg(101);
ShowErrorForCom("Frm_KeyPassphrase","Fnt_KeyPassphrase",msg);
return false;
}
if (check == -3)
{
msg = getmsg(102,8,63);
ShowErrorForCom("Frm_KeyPassphrase","Fnt_KeyPassphrase",msg);
return false;
}
check = checkForKeyPassphrase(value);
if (check == false)
{
msg = getmsg(114);
ShowErrorForCom("Frm_KeyPassphrase","Fnt_KeyPassphrase",msg);
return false;
}
return true;
}
function ServerIPCheck(id,name)
{
if(checkNull(getValue(id)) == false)
{
msg = getmsg(101);
ShowErrorForCom(id,name,msg);
return false;
}
if(checkIpAddress(getValue(id)) == false)
{
msg = getmsg(108);
ShowErrorForCom(id,name,msg);
return false;
}
if(getValue(id) == "0.0.0.0")
{
msg = getmsg(141);
ShowErrorForCom(id,name,msg);
return false;
}
return true;
}
function SecretCheck(id,name)
{
var value = getValue(id);
var check = checkStrLengthRange(value, 1, 64);
if (check == -1)
{
msg = getmsg(101);
ShowErrorForCom(id,name,msg);
return false;
}
if (check == -3)
{
msg = getmsg(102,1,64);
ShowErrorForCom(id,name,msg);
return false;
}
check = checkGenStringForASC(value);
if (check == false)
{
msg = getmsg(114);
ShowErrorForCom(id,name,msg);
return false;
}
return true;
}
function EAPParamsCheck()
{
if (getDisplay("eap") == false)
{
return true;
}
if(ServerIPCheck("Frm_MasterAuthServerIP","Fnt_MasterAuthServerIP") == false)
{
return false;
}
if( false == checkPort("Frm_MasterAuthServerPort", "Fnt_MasterAuthServerPort", 1, 1, 65535) )
{
return  false;
}
if(SecretCheck("Frm_MasterAuthServerSecret","Fnt_MasterAuthServerSecret") == false)
{
return false;
}
return true;
}
function AllCheck()
{
if(WepkeyCheck() == false)
{
return false;
}
if(KeyPassphraseCheck() == false)
{
return false;
}
if(EAPParamsCheck() == false)
{
return false;
}
return true;
}
function ESSID_Choose()
{
DisableALL();
location.href = getObj("fSubmit").action + "&IF_VIEWID=" + getValue("Frm_SSID_SET");
}
function pageLoad(url)
{
moveErrLayer(580,145);
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
if (errstr != "SUCC" && errpara != "SUCC")
{
if((errpara == "WEPAuthMod") || (errpara == "BeaconType")
|| (errpara == "WPAAuthMode") || (errpara == "11iAuthMode"))
{
errpara = "Authentication";
}
}
ProcessRet(errstr, errpara);
pageGetValue();
}
function pageGetValue()
{
var instNum = getValue("WLAN_INSTNUM");
for (var i=0; i<instNum; i++)
{
var ident = getValue("WLAN_SSID"+i);
addSelectOption("Frm_SSID_SET", ident, "SSID"+ident.match(/\d+$/));
<%
if((cver == 3) && (userright == 2))
{
%>
i = instNum;
<%
}
%>
}
jslSetValue("Frm_SSID_SET", "IF_VIEWID");
if(getValue("BeaconType") == "None"
|| (getValue("WEPAuthMode") == "None" && getValue("BeaconType") == "Basic"))
{
setValue("Frm_Authentication", "Open System");
jslSetValue("Frm_BeaconType","BeaconType");
}
if(getValue("WEPAuthMode") == "SharedAuthentication"
&& getValue("BeaconType") == "Basic")
{
setValue("Frm_Authentication", "Shared Key");
jslSetValue("Frm_BeaconType","BeaconType");
}
if((getValue("BeaconType") == "WPA")
&& (getValue("WPAAuthMode") == "PSKAuthentication"))
{
setValue("Frm_Authentication", "WPA-PSK");
jslSetValue("Frm_WPAEncryptType","WPAEncryptType");
}
if((getValue("BeaconType") == "11i")
&& (getValue("11iAuthMode") == "PSKAuthentication"))
{
setValue("Frm_Authentication", "WPA2-PSK");
jslSetValue("Frm_WPAEncryptType","11iEncryptType");
}
if((getValue("BeaconType") == "WPAand11i")
&& (getValue("WPAAuthMode") == "PSKAuthentication")
&& (getValue("11iAuthMode") == "PSKAuthentication"))
{
setValue("Frm_Authentication", "WPA/WPA2-PSK");
jslSetValue("Frm_WPAEncryptType","WPAEncryptType");
}
if((getValue("BeaconType") == "WPA") && (getValue("WPAAuthMode") == "EAPAuthentication"))
{
setValue("Frm_Authentication", "WPA-EAP");
jslSetValue("Frm_WPAEncryptType","WPAEncryptType");
}
if((getValue("BeaconType") == "11i") && (getValue("11iAuthMode") == "EAPAuthentication"))
{
setValue("Frm_Authentication", "WPA2-EAP");
jslSetValue("Frm_WPAEncryptType","11iEncryptType");
}
if((getValue("BeaconType") == "WPAand11i") && (getValue("WPAAuthMode") == "EAPAuthentication")
&& (getValue("11iAuthMode") == "EAPAuthentication"))
{
setValue("Frm_Authentication", "WPA/WPA2-EAP");
jslSetValue("Frm_WPAEncryptType","WPAEncryptType");
}
jslSetValue("Frm_MasterAuthServerIP", "MasterAuthServerIP");
jslSetValue("Frm_MasterAuthServerPort", "MasterAuthServerPort");
jslSetValue("Frm_MasterAuthServerSecret", "MasterAuthServerSecret");
<%
if(cver == 56)
{
%>
jslSetValue("Frm_Interface", "EapWanc");
<%
}
%>
jslSetValue("Frm_WEPKeyIndex","WEPKeyIndex");
jslSetValue("Frm_WEPKey0","WEPKey0");
jslSetValue("Frm_WEPKey1","WEPKey1");
jslSetValue("Frm_WEPKey2","WEPKey2");
jslSetValue("Frm_WEPKey3","WEPKey3");
jslSetValue("Frm_KeyPassphrase","KeyPassphrase",getFlag);
jslSetValue("Frm_WPAGroupRekey","WPAGroupRekey");
UpdateAuthentication();
Wireless_switch();
<%
if(cver == 74 && userright == 2)
{
%>
jslDiDisplay("TR_Authentication","t_wep","shared","eap","TR_WPAEncryptType");
<%
}
%>
}
function pageSetValue()
{
HiddenParaInit(CONFIG_PARA);
if(getValue("Frm_Authentication") == "Open System")
{
jslSetValue("BeaconType","Frm_BeaconType");
if (getValue("Frm_BeaconType") == "Basic")
{
setValue("WEPAuthMode", "None");
}
}
if(getValue("Frm_Authentication") == "Shared Key")
{
jslSetValue("BeaconType","Frm_BeaconType");
setValue("WEPAuthMode", "SharedAuthentication");
}
if(getValue("Frm_Authentication") == "WPA-PSK")
{
HiddenParaInit(PSK_PARA);
setValue("BeaconType", "WPA");
setValue("WPAAuthMode", "PSKAuthentication");
jslSetValue("WPAEncryptType","Frm_WPAEncryptType");
jslSetValue("KeyPassphrase","Frm_KeyPassphrase",setFlag);
jslSetValue("WPAGroupRekey","Frm_WPAGroupRekey");
}
if(getValue("Frm_Authentication") == "WPA2-PSK")
{
HiddenParaInit(PSK_PARA);
setValue("BeaconType", "11i");
setValue("11iAuthMode", "PSKAuthentication");
jslSetValue("11iEncryptType","Frm_WPAEncryptType");
jslSetValue("KeyPassphrase","Frm_KeyPassphrase",setFlag);
jslSetValue("WPAGroupRekey","Frm_WPAGroupRekey");
}
if(getValue("Frm_Authentication") == "WPA/WPA2-PSK")
{
HiddenParaInit(PSK_PARA);
setValue("BeaconType", "WPAand11i");
setValue("WPAAuthMode", "PSKAuthentication");
setValue("11iAuthMode", "PSKAuthentication");
jslSetValue("WPAEncryptType","Frm_WPAEncryptType");
jslSetValue("11iEncryptType","Frm_WPAEncryptType");
jslSetValue("KeyPassphrase","Frm_KeyPassphrase",setFlag);
jslSetValue("WPAGroupRekey","Frm_WPAGroupRekey");
}
if(getValue("Frm_Authentication") == "WPA-EAP")
{
HiddenParaInit(PSK_PARA);
HiddenParaInit(EAP_PARA);
setValue("BeaconType", "WPA");
setValue("WPAAuthMode", "EAPAuthentication");
jslSetValue("WPAEncryptType","Frm_WPAEncryptType");
jslSetValue("MasterAuthServerIP", "Frm_MasterAuthServerIP");
jslSetValue("MasterAuthServerPort", "Frm_MasterAuthServerPort");
jslSetValue("MasterAuthServerSecret", "Frm_MasterAuthServerSecret");
<%
if(cver == 56)
{
%>
jslSetValue("EapWanc", "Frm_Interface");
<%
}
%>
}
if(getValue("Frm_Authentication") == "WPA2-EAP")
{
HiddenParaInit(PSK_PARA);
HiddenParaInit(EAP_PARA);
setValue("BeaconType", "11i");
setValue("11iAuthMode", "EAPAuthentication");
jslSetValue("11iEncryptType","Frm_WPAEncryptType");
jslSetValue("MasterAuthServerIP", "Frm_MasterAuthServerIP");
jslSetValue("MasterAuthServerPort", "Frm_MasterAuthServerPort");
jslSetValue("MasterAuthServerSecret", "Frm_MasterAuthServerSecret");
<%
if(cver == 56)
{
%>
jslSetValue("EapWanc", "Frm_Interface");
<%
}
%>
}
if(getValue("Frm_Authentication") == "WPA/WPA2-EAP")
{
HiddenParaInit(PSK_PARA);
HiddenParaInit(EAP_PARA);
setValue("BeaconType", "WPAand11i");
setValue("WPAAuthMode", "EAPAuthentication");
setValue("11iAuthMode", "EAPAuthentication");
jslSetValue("WPAEncryptType","Frm_WPAEncryptType");
jslSetValue("11iEncryptType","Frm_WPAEncryptType");
jslSetValue("WPAEncryptType","Frm_WPAEncryptType");
jslSetValue("MasterAuthServerIP", "Frm_MasterAuthServerIP");
jslSetValue("MasterAuthServerPort", "Frm_MasterAuthServerPort");
jslSetValue("MasterAuthServerSecret", "Frm_MasterAuthServerSecret");
<%
if(cver == 56)
{
%>
jslSetValue("EapWanc", "Frm_Interface");
<%
}
%>
}
if (getDisplay("shared") == true)
{
for(var i=0; i<4; i++)
{
HiddenMultiInstParaInit(WEPKEY_PARA, i);
}
setValue("WEPKey", "NULL");
for(var j=0; j<WEPKEY_PARA.length; j++)
{
val = WEPKEY_PARA[j];
WEPKEY_PARA[j] = "NULL";
}
jslSetValue("WEPKeyIndex","Frm_WEPKeyIndex");
for (var k = 0; k < 4; k++)
{
jslSetValue("WEPKey"+k,"Frm_WEPKey"+k);
if ((k+1) == getValue("WEPKeyIndex"))
{
jslSetValue("WEPKey","Frm_WEPKey"+k);
}
}
}
}
function pageSubmit()
{
ReSetValueRmZero("Frm_WPAGroupRekey", "Frm_ASPort");
ReSetIpRmZero("Frm_ASIPAddress");
if(AllCheck() == true)
{
if ( true==getDisplay("t_wep") && "Basic"==getValue("Frm_BeaconType") )
{
var isOk = window.confirm("&?cwlan01;");
if ( false == isOk )
{
return ;
}
}
pageSetValue();
setValue("IF_ACTION", "apply");
setValue("IF_CONFIGTAG", "Y");
if (getDisplay("wpa") == true)
{
setValue("IF_PSKTAG", "Y");
}
else
{
setValue("IF_PSKTAG", "N");
}
if (getDisplay("shared") == true)
{
setValue("IF_WEPKEYTAG", "Y");
}
else
{
setValue("IF_WEPKEYTAG", "N");
}
setValue("IF_VIEWID", getValue("Frm_SSID_SET"));
DisableALL();
getObj("fSubmit").submit();
}
}
function pageCancel()
{
DisableALL();
getObj("fSubmit").submit();
}
function checkForKeyPassphrase(value)
{
var length = value.length;
for(var j = 0 ;j < length; j++)
{
var xx = value.charCodeAt(j);
if (xx < 32 || xx > 126)
{
return false;
}
}
return true;
}
</SCRIPT>
