
<script language="javascript">
var PPP_TTY_PARA = new Array(
"Enable",
"WANCName",
"ConnType",
"LANDViewName",
"StrServList",
"ServList",
"IsNAT",
"IsDefGW",
"IsForward",
"DSCP",
"VLANID",
"Priority",
"WBDMode",
"IPAddress",
"SubnetMask",
"GateWay",
"DNS1",
"DNS2",
"DNS3",
"UpTime",
"ConnStatus",
"ConnError",
"UserName",
"Password",
"MaxMRU",
"MRU",
"MTU",
"ConnTrigger",
"TransType",
"AuthType",
"IdleTime",
"WCDViewName",
"TtyDialNum",
"TtyAPN",
"TtyPDPType",
"ValidWANRx",
"ValidLANTx",
"HostTrigger",
"RxPackets",
"TxPackets",
"RxBytes",
"TxBytes"
);
var IP_TTY_PARA = new Array(
"Enable",
"WANCName",
"ConnType",
"LANDViewName",
"StrServList",
"ServList",
"IsNAT",
"IsDefGW",
"IsForward",
"DSCP",
"VLANID",
"Priority",
"WBDMode",
"IPAddress",
"SubnetMask",
"GateWay",
"DNS1",
"DNS2",
"DNS3",
"UpTime",
"ConnStatus",
"ConnError",
"MTU",
"DongleType"
);
function getmsg(id)
{
var str      = new Array();
str[0]   = new Array(128, "&?error_128;");
str[1]   = new Array(101, "&?error_101;");
str[2]   = new Array(102, "&?error_102;");
str[3]   = new Array(103, "&?error_103;");
str[4]   = new Array(114, "&?error_114;");
str[5]   = new Array(108, "&?error_108;");
str[6]   = new Array(115, "&?error_115;");
str[7]   = new Array(116, "&?error_116;");
str[8]   = new Array(117, "&?error_117;");
str[9]   = new Array(129, "&?error_129;");
str[10]  = new Array(126, "&?error_126;");
str[11]  = new Array(127, "&?error_127;");
str[12]  = new Array(123, "&?error_123;");
str[13]  = new Array(122, "&?error_122;");
str[14]  = new Array(118, "&?error_118;");
str[15]  = new Array(119, "&?error_119;");
str[16]  = new Array(109, "&?error_109;");
str[17]  = new Array(130, "&?error_130;");
str[18]  = new Array(147, "&?error_147;");
str[19]  = new Array(170, "&?error_170;");
str[20]  = new Array(171, "&?error_171;");
str[21]  = new Array(172, "&?error_172;");
str[22]  = new Array(173, "&?error_173;");
str[23]  = new Array(174, "&?error_174;");
str[24]  = new Array(166, "&?error_166;");
return getMsgFormArray(str, arguments);
}
var refreshNum = 8;
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
OldProcessRet(errstr, errpara);
moveErrLayer(590,110);
pageGetValue();
}
function refresh()
{
DisableALL();
getObj("fSubmit").submit();
}
function ConnTrigger()
{
var dailup = getValue("Frm_ConnTrigger");
switch(dailup)
{
case "AlwaysOn":
{
jslDisable("Frm_ValidWANRx");
jslDisable("Frm_ValidLANTx");
jslDisable("Frm_HostTrigger");
jslDiDisplay("TR_connect","TR_IdleTime");
break;
}
case "OnDemand":
{
jslEnable("Frm_ValidWANRx");
jslEnable("Frm_ValidLANTx");
jslEnable("Frm_HostTrigger");
jslEnDisplay("TR_IdleTime");
jslDiDisplay("TR_connect");
break;
}
case "Manual":
{
jslDisable("Frm_ValidWANRx");
jslDisable("Frm_ValidLANTx");
jslDisable("Frm_HostTrigger");
jslDiDisplay("TR_IdleTime");
var key = getValue("IF_INDEX");
if ("-1"==key || getValue("ConnTrigger"+key)!="Manual" )
{
break;
}
else if ( getValue("ConnTrigger"+key)=="Manual" )
{
jslEnDisplay("TR_connect");
}
var wancdStatus = getValue("IF_WANCDStatus");
if (wancdStatus == "up")
{
var pppStatus = getValue("IF_CONNSTATUS");
if( pppStatus == "true")
{
var count = getValue("IF_COUNT");
if (count > 0)
{
setValue("IF_COUNT", count-8);
jslEnDisplay("Tr_QryStatTip");
jslDiDisplay("ppp_note");
jslDisable("Btn_Connect","Btn_Disconnect");
jslDisable("Btn_DoEdit","Btn_Delete");
setTimeout("refresh()", 3000);
}
else
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
jslDisable("Btn_Connect");
jslEnable("Btn_Disconnect");
setValue("IF_IDLE", "");
}
}
else if(pppStatus == "false")
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
jslDisable("Btn_Disconnect");
jslEnable("Btn_Connect");
setValue("IF_IDLE", "");
}
else
{
jslDisable("Btn_Disconnect", "Btn_Connect");
var errstr= getValue("IF_ERRORSTR");
if (errstr != "SUCC")
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
break;
}
else
{
jslDisable("Btn_DoEdit","Btn_Delete");
}
var count = getValue("IF_COUNT");
if (count > 0)
{
jslEnDisplay("Tr_QryStatTip");
jslDiDisplay("ppp_note");
setValue("IF_COUNT", count-1);
setTimeout("refresh()", 3000);
}
else
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
jslEnable("Btn_DoEdit","Btn_Delete");
setValue("IF_IDLE", "");
}
}
}
else
{
jslDisable("Btn_Disconnect", "Btn_Connect");
var errstr= getValue("IF_ERRORSTR");
if (errstr != "SUCC")
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
break;
}
else
{
jslDisable("Btn_DoEdit","Btn_Delete");
}
var idle = getValue("IF_IDLE");
if ( "StatusQry" != idle )
{
jslEnDisplay("Tr_QryStatTip");
jslDiDisplay("ppp_note");
setValue("IF_IDLE","StatusQry");
setValue("IF_COUNT", refreshNum);
setTimeout("refresh()", 3000);
}
else if ( "StatusQry" == idle )
{
var count = getValue("IF_COUNT");
if (count > 0)
{
jslEnDisplay("Tr_QryStatTip");
jslDiDisplay("ppp_note");
setValue("IF_COUNT", count-1);
setTimeout("refresh()", 3000);
}
else
{
jslDiDisplay("Tr_QryStatTip");
jslEnDisplay("ppp_note");
jslEnable("Btn_DoEdit","Btn_Delete");
setValue("IF_IDLE","");
}
}
}
break;
}
default:
break;
}
}
function pageGetValue()
{
var pwdStr = "";
var key    = getValue("IF_INDEX");
if(key == "-1")
{
jslEnable("Frm_DongleType");
jslDisable("Frm_ServList");
jslDiDisplay("Btn_DoEdit","Btn_Delete");
jslEnDisplay("Btn_Add","Btn_Cancel");
setValue("Frm_MTU","1500");
setValue("Frm_IdleTime","1200");
setChecked("Frm_ValidWANRx",false);
setChecked("Frm_ValidLANTx",true);
setChecked("Frm_HostTrigger",true);
}
else
{
jslDiDisplay("Btn_Add","Btn_Cancel");
jslEnDisplay("Btn_DoEdit","Btn_Delete");
jslSetValue("Frm_WANCName1", "WANCName"+key);
jslSetValue("Frm_ServList", "ServList" + key);
jslDisable("Frm_ServList");
var mode = getValue("IF_WANCTYPE");
if ( "pppoe" == mode )
{
setValue("Frm_DongleType","Modem");
jslSetValue("Frm_UserName","UserName"+key);
jslSetValue("Frm_Password","Password"+key,"GET");
jslSetValue("Frm_AuthType","AuthType"+key);
jslSetValue("Frm_ConnTrigger","ConnTrigger"+key);
jslSetValue("Frm_IdleTime","IdleTime"+key);
jslSetValue("Frm_MTU","MTU"+key);
jslSetValue("Frm_PdpType", "TtyPDPType"+key);
jslSetValue("Frm_Apn", "TtyAPN"+key);
jslSetValue("Frm_DialNumber", "TtyDialNum"+key);
if (getValue("ValidWANRx"+key)==1)
{
setChecked("Frm_ValidWANRx",true);
}
else if (getValue("ValidWANRx"+key)==0)
{
setChecked("Frm_ValidWANRx",false);
}
if (getValue("ValidLANTx"+key)==1)
{
setChecked("Frm_ValidLANTx",true);
}
else if (getValue("ValidLANTx"+key)==0)
{
setChecked("Frm_ValidLANTx",false);
}
if (getValue("HostTrigger"+key)==1)
{
setChecked("Frm_HostTrigger",true);
}
else if (getValue("HostTrigger"+key)==0)
{
setChecked("Frm_HostTrigger",false);
}
}
else
{
setValue("Frm_DongleType","Router");
}
jslDisable("Frm_DongleType");
Change_DongleType();
}
return;
}
function pageSetValue()
{
var number        = getValue("IF_INSTNUM");
var wanc_value    = getValue("IF_INDEX");
var index;
if(wanc_value == -1)
{
index = number;
}
else
{
index = wanc_value;
}
var mode = getValue("Frm_DongleType");
if ( "Modem" == mode )
{
HiddenMultiInstParaInit(PPP_TTY_PARA, index);
}
else
{
HiddenMultiInstParaInit(IP_TTY_PARA, index);
}
jslSetValue("WANCName"+index, "Frm_WANCName1");
setValue("IF_INDEX",index);
var slObj = getObj("Frm_ServList");
var slname = slObj.options[slObj.selectedIndex].text;
setValue("StrServList"+index, slname);
setValue("ServList"+index, slObj.value);
setValue("Enable"+index, "1");
if ( "Modem" == mode )
{
jslSetValue("UserName"+index,"Frm_UserName");
jslSetValue("Password"+index,"Frm_Password","SET");
jslSetValue("MTU"+index,"Frm_MTU");
jslSetValue("AuthType"+index,"Frm_AuthType");
jslSetValue("ConnTrigger"+index,"Frm_ConnTrigger");
if(getValue("Frm_ConnTrigger")=="OnDemand")
{
jslSetValue("IdleTime"+index,"Frm_IdleTime");
if (getChecked("Frm_ValidWANRx")==true)
{
setValue("ValidWANRx"+index,"1");
}
else if (getChecked("Frm_ValidWANRx")==false)
{
setValue("ValidWANRx"+index, "0");
}
if (getChecked("Frm_ValidLANTx")==true)
{
setValue("ValidLANTx"+index,"1");
}
else if (getChecked("Frm_ValidLANTx")==false)
{
setValue("ValidLANTx"+index, "0");
}
if (getChecked("Frm_HostTrigger")==true)
{
setValue("HostTrigger"+index,"1");
}
else if (getChecked("Frm_HostTrigger")==false)
{
setValue("HostTrigger"+index, "0");
}
}
jslSetValue("TtyPDPType"+index,"Frm_PdpType");
jslSetValue("TtyAPN"+index,"Frm_Apn");
jslSetValue("TtyDialNum"+index,"Frm_DialNumber");
jslSetValue("WCDViewName"+index,"IF_WANCDViewName");
setValue("IF_COUNT", refreshNum);
setValue("IF_WANCTYPE","pppoe");
setValue("IF_IDLE","edit");
}
else
{
setValue("IF_WANCTYPE","dhcp/static");
}
}
function Change_Dialup()
{
ConnTrigger();
if (getValue("Frm_ConnTrigger") != "OnDemand")
{
var key    = getValue("IF_INDEX");
if(key=="-1")
{
setValue("Frm_IdleTime", "1200");
setChecked("Frm_ValidWANRx",false);
setChecked("Frm_ValidLANTx",true);
setChecked("Frm_HostTrigger",true);
}
else
{
var key=getValue("IF_INDEX");
jslSetValue("Frm_IdleTime", "IdleTime"+key);
if (getValue("ValidWANRx"+key) == "0")
{
setChecked("Frm_ValidWANRx", false);
}
else
{
setChecked("Frm_ValidWANRx", true);
}
if (getValue("ValidLANTx"+key) == "0")
{
setChecked("Frm_ValidLANTx", false);
}
else
{
setChecked("Frm_ValidLANTx", true);
}
if (getValue("HostTrigger"+key) == "0")
{
setChecked("Frm_HostTrigger", false);
}
else
{
setChecked("Frm_HostTrigger", true);
}
}
}
}
function Change_DongleType()
{
var dongletype = getValue("Frm_DongleType");
if ("Modem" == dongletype)
{
jslEnDisplay("TR_PdpType","TR_Apn","TR_DialNumber","TR_MTU","TR_UserName","TR_Password",
"TR_AuthType","TR_ConnTrigger","TR_IdleTime");
ConnTrigger();
}
else
{
jslDiDisplay("TR_PdpType","TR_Apn","TR_DialNumber","TR_MTU","TR_UserName","TR_Password",
"TR_AuthType","TR_ConnTrigger","TR_IdleTime","TR_connect");
}
}
function Check_StrLengthRange(value,min,max,Frm,Fnt)
{
var temp = checkStrLengthRange(value,min,max);
if(temp==-1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(temp==-3)
{
msg =  getmsg(102,min,max);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
return true;
}
function Check_IntegerRange(value,min,max,Frm,Fnt)
{
var tem = checkIntegerRange(value,min,max);
if(tem==-1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-2)
{
msg = getmsg(115);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-3)
{
msg = getmsg(116,min,max);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
return true;
}
function pageCheckValue()
{
var msg = "";
var name     = getValue("Frm_WANCName1");
if(name=="")
{
msg = getmsg(101);
ShowErrorForCom("Frm_WANCName1","Fnt_WANCName1",msg);
return false;
}
if(Check_StrLengthRange(name,1,256,"Frm_WANCName1","Fnt_WANCName1")!=true)
{
return false;
}
if(checkGenString(name)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_WANCName1","Fnt_WANCName1",msg);
return false;
}
var dongletype = getValue("Frm_DongleType");
if ("Modem" == dongletype)
{
var username = getValue("Frm_UserName");
if(checkGenStringForASC(username)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_UserName","Fnt_UserName",msg);
return false;
}
var usn_range = checkStrLengthRange(username,1,64);
if ( usn_range == -3 )
{
msg = getmsg(102,1,64);
ShowErrorForCom("Frm_UserName","Fnt_UserName",msg);
return false;
}
var pass = getValue("Frm_Password");
if(checkGenStringForASC(pass) != true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_Password","Fnt_Password",msg);
return false;
}
var pass_range = checkStrLengthRange(pass,1,64);
if(pass_range == -3)
{
msg = getmsg(102,1,64);
ShowErrorForCom("Frm_Password","Fnt_Password",msg);
return false;
}
var MTU = getValue("Frm_MTU");
if(Check_IntegerRange(MTU,128,1540,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
var idletime = getValue("Frm_IdleTime");
if(getValue("Frm_ConnTrigger") == "OnDemand")
{
if(Check_IntegerRange(idletime,0,4294967295,"Frm_IdleTime","Fnt_IdleTime")!=true)
{
return false;
}
}
var apn_value = getValue("Frm_Apn");
if (apn_value != "")
{
if (Check_StrLengthRange(apn_value,1,31,"Frm_Apn","Fnt_Apn") == false)
{
return false;
}
}
var dialnum   = getValue("Frm_DialNumber");
if (Check_StrLengthRange(dialnum,1,31,"Frm_DialNumber","Fnt_DialNumber") == false)
{
return false;
}
if(dialnum.match("[^0-9*#]") != null)
{
msg = getmsg(114);
ShowErrorForCom("Frm_DialNumber","Fnt_DialNumber",msg);
return false;
}
}
else
{
}
return true;
}
function pageAdd()
{
ReSetValueRmZero("Frm_IdleTime");
if(pageCheckValue() == true)
{
pageSetValue();
setValue("IF_ACTION","new");
setValue("IF_MULTIDISPLAY","0");
DisableALL();
getObj("fSubmit").submit();
}
}
function pageCancel()
{
DisableALL();
location.href = getObj("fSubmit").action;
}
function pageEdit()
{
ReSetValueRmZero("Frm_IdleTime");
if(pageCheckValue() == true)
{
pageSetValue();
setValue("IF_ACTION","apply");
setValue("IF_MULTIDISPLAY","0");
DisableALL();
getObj("fSubmit").submit();
}
}
function pageDel()
{
setValue("IF_ACTION", "delete");
DisableALL();
getObj("fSubmit").submit();
}
function PPP_connect()
{
setValue("IF_ACTION", "pppconnect");
setValue("IF_IDLE", "pppconnect");
setValue("IF_COUNT", refreshNum);
DisableALL();
getObj("fSubmit").submit();
}
function PPP_disconnect()
{
setValue("IF_ACTION", "pppdisconnect");
setValue("IF_IDLE","pppdisconnect");
setValue("IF_COUNT", refreshNum);
DisableALL();
getObj("fSubmit").submit();
}
</script>