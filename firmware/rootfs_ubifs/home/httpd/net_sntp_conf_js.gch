<script language="javascript">
var USERIF_PARA = new Array(
"Enable",
"NtpServer1",
"NtpServer2",
"NtpServer3",
"NtpServer4",
"NtpServer5",
"WeekDay",
"CurrentLocalTime",
"DayTimeType",
"LocalTimeZone",
"LocalTimeZoneName",
"DaylightSavingsUsed",
"DaylightSavingsStart",
"DaylightSavingsEnd",
"PollTimeInterval",
"Dscp",
"isSynchronized",
"ZoneIndex",
"AutoSetTzname",
"PosixTimeZoneName"
);
function getmsg(id)
{
var str      = new Array();
str[0]   = new Array(101, "&?error_101;");
str[1]   = new Array(134, "&?error_134;");
str[2]   = new Array(118, "&?error_118;");
str[3]   = new Array(119, "&?error_119;");
str[4]   = new Array(122, "&?error_122;");
str[5]   = new Array(116, "&?error_116;");
str[6]   = new Array(117, "&?error_117;");
str[7]   = new Array(102, "&?error_102;");
str[8]   = new Array(103, "&?error_103;");
return getMsgFormArray(str, arguments);
}
var timeZoneArray =
[
[ "TZ_ENEWETAK_KWAJALEIN",   0,      false,  "-12:00",     "&?cmsgmt000;",     "Dateline Standard Time£¬Eniwetok, Kwajalein" ],
[ "TZ_MIDWAY_ISLAND",        1,      false,  "-11:00",     "&?cmsgmt001;",     "Midway Island, Samoa" ],
[ "TZ_HAWAII",               2,      false,  "-10:00",     "&?cmsgmt002;",     "Hawaii" ],
[ "TZ_ALASKA",               3,      true,   "-09:00",     "&?cmsgmt003;",     "Alaska" ],
[ "TZ_PACIFIC",              4,      true,   "-08:00",     "&?cmsgmt004;",     "Pacific Time (US, Canada), Tijuana" ],
[ "TZ_ARIZONA",              5,      false,  "-07:00",     "&?cmsgmt010;",     "Arizona, Mountain Time (US)" ],
[ "TZ_CENTRAL_AMERICA",      6,      true,   "-06:00",     "&?cmsgmt013;",     "Central America, Central Canada" ],
[ "TZ_EST",                  7,      true,   "-05:00",     "&?cmsgmt015;",     "Eastern Time (US, Canada)" ],
[ "TZ_ATLANTIC",             8,      true,   "-04:00",     "&?cmsgmt020;",     "Atlantic Time (Canada)" ],
[ "TZ_NEWFOUNDLAND",         9,      true,   "-03:30",     "&?cmsgmt025;",     "Newfoundland" ],
[ "TZ_BRASILIA",            10,      true,   "-03:00",     "&?cmsgmt030;",     "Brasilia" ],
[ "TZ_MID_ATLANTIC",        11,      true,   "-02:00",     "&?cmsgmt033;",     "Mid-Atlantic" ],
[ "TZ_AZORES",              12,      true,   "-01:00",     "&?cmsgmt035;",     "Azores" ],
[ "TZ_CASABLANCA",          13,      true,   "0:00",       "&?cmsgmt040;",     "Casablanca, Monrovia" ],
[ "TZ_AMSTERDAM",           14,      true,   "+01:00",     "&?cmsgmt045;",     "Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna" ],
[ "TZ_ATHENS",              15,      true,   "+02:00",     "&?cmsgmt050;",     "Athens, Bucharest, Istanbul," ],
[ "TZ_BAGHDAD",             16,      true,   "+03:00",     "&?cmsgmt055;",     "Baghdad" ],
[ "TZ_TEHRAN",              17,      true,   "+03:30",     "&?cmsgmt056;",     "Tehran" ],
[ "TZ_ABU_DHABI",           18,      false,  "+04:00",     "&?cmsgmt060;",     "Abu Dhabi, Muscat, Tbilisi" ],
[ "TZ_KABUL",               19,      false,  "+04:30",     "&?cmsgmt065;",     "Kabul" ],
[ "TZ_EKATERINBURG",        20,      false,  "+05:00",     "&?cmsgmt070;",     "Ekaterinburg" ],
[ "TZ_CALCUTTA",            21,      false,  "+05:30",     "&?cmsgmt073;",     "Calcutta, Mumbai, New Delhi, Madras" ],
[ "TZ_KATHMANDU",           22,      false,  "+05:45",     "&?cmsgmt075;",     "Kathmandu" ],
[ "TZ_ALMATY",              23,      false,  "+06:00",     "&?cmsgmt080;",     "Novosibirsk" ],
[ "TZ_RANGOON",             24,      false,  "+06:30",     "&?cmsgmt083;",     "Rangoon" ],
[ "TZ_BANGKOK",             25,      false,  "+07:00",     "&?cmsgmt085;",     "Bangkok, Hanoi, Jakarta" ],
[ "TZ_BEIJING",             26,      false,  "+08:00",     "&?cmsgmt090;",     "Beijing, Chongqing, Hong Kong, Urumqi" ],
[ "TZ_TOKYO",               27,      false,  "+09:00",     "&?cmsgmt095;",     "Osaka, Sapporo, Tokyo, Seoul" ],
[ "TZ_ADELAIDE",            28,      true,   "+09:30",     "&?cmsgmt100;",     "Adelaide" ],
[ "TZ_BRISBANE",            29,      false,  "+10:00",     "&?cmsgmt105;",     "Brisbane, Guam Port, Moresby" ],
[ "TZ_MAGADAN",             30,      false,  "+11:00",     "&?cmsgmt110;",     "Magadan, Kamchatka" ],
[ "TZ_AUCKLAND",            31,      true,   "+12:00",     "&?cmsgmt113;",     "Auckland, Wellington" ],
[ "TZ_NUKUALOFA",           32,      false,  "+13:00",     "&?cmsgmt115;",     "Nukualofa" ],
[ "TZ_MOUNTAIN",            33,      true,   "-07:00",     "&?cmsgmt120;",     "Mountain Standard Time(US, Canada)" ],
[ "TZ_CHIHUAHAR",           34,      true,   "-07:00",     "&?cmsgmt125;",     "Chihuahau, La Paz,Mazatlan" ],
[ "TZ_CENTRAL_TIME",        35,      true,   "-06:00",     "&?cmsgmt130;",     "Central Time (US, Canada)" ],
[ "TZ_GUADALAJARA",         36,      true,   "-06:00",     "&?cmsgmt135;",     "Guadalajara, Mexico City, Monterrey" ],
[ "TZ_BOGOTA",              37,      false,  "-05:00",     "&?cmsgmt140;",     "Bogota, Lima, Quito,Indiana(East) " ],
[ "TZ_CARACAS",             38,      false,  "-04:00",     "&?cmsgmt145;",     "Caracas, La Paz" ],
[ "TZ_SANTIAGO",            39,      true,   "-04:00",     "&?cmsgmt150;",     "Santiago" ],
[ "TZ_BUENOS",              40,      false,  "-03:00",     "&?cmsgmt155;",     "Buenos Aires, Georgetown" ],
[ "TZ_GREENLAND",           41,      true,   "-03:00",     "&?cmsgmt158;",     "Greenland" ],
[ "TZ_CAPE",                42,      false,  "-01:00",     "&?cmsgmt160;",     "Cape Verde Islands" ],
[ "TZ_GREENWICH",           43,      true,   "0:00",       "&?cmsgmt165;",     "Greenwich Mean Time: Dublin, Edinburgh" ],
[ "TZ_BELGRADE",            44,      true,   "+01:00",     "&?cmsgmt170;",     "Belgrade, Bratislava, Budapest, Ljubljana" ],
[ "TZ_SARAJEVO",            45,      true,   "+01:00",     "&?cmsgmt175;",     "Sarajevo, Skopje, Warsaw, Zagreb" ],
[ "TZ_W_CENTRAL_AFRICA",    46,      false,  "+01:00",     "&?cmsgmt180;",     "W. Central Africa" ],
[ "TZ_BRUSSEL",             47,      true,   "+01:00",     "&?cmsgmt185;",     "Brussel, Copenhagen, Madrid, Paris" ],
[ "TZ_HARARE",              48,      false,  "+02:00",     "&?cmsgmt190;",     "Harare, Pretoria, Jerusalem, Cairo" ],
[ "TZ_HELSINKI",            49,      true,   "+02:00",     "&?cmsgmt193;",     "Helsinki, kiev,Riga, Sofia,Tallinn, Vilnius" ],
[ "TZ_MINSK",               50,      false,  "+02:00",     "&?cmsgmt195;",     "Kaliningrad, Minsk" ],
[ "TZ_KUWAIT",              51,      false,  "+03:00",     "&?cmsgmt201;",     "Kuwait, Riyadh, Nairobi" ],
[ "TZ_MOSCOW",              52,      false,  "+03:00",     "&?cmsgmt203;",     "Moscow, St. Petersburg, Volgograd" ],
[ "TZ_BAKU",                53,      true,   "+04:00",     "&?cmsgmt205;",     "Baku, Yerevan" ],
[ "TZ_ISLAMABAD",           54,      false,  "+05:00",     "&?cmsgmt207;",     "Islamabad, Karachi, Tashkent" ],
[ "TZ_ASTANA",              55,      false,  "+06:00",     "&?cmsgmt210;",     "Astana, Dhaka, Sri Jayawardenepura" ],
[ "TZ_KRASNOYARSK",         56,      false,  "+07:00",     "&?cmsgmt215;",     "Krasnoyarsk" ],
[ "TZ_IRKUTSK",             57,      false,  "+08:00",     "&?cmsgmt220;",     "Irkutsk" ],
[ "TZ_YAKUTSK",             58,      false,  "+09:00",     "&?cmsgmt225;",     "Yakutsk" ],
[ "TZ_DARWIN",              59,      false,  "+09:30",     "&?cmsgmt227;",     "Darwin" ],
[ "TZ_CANBERRA",            60,      true,   "+10:00",     "&?cmsgmt230;",     "Canberra, Melbourne, Sydney" ],
[ "TZ_HOBART",              61,      true,   "+10:00",     "&?cmsgmt235;",     "Hobart" ],
[ "TZ_VLADIVOSTOK",         62,      false,  "+10:00",     "&?cmsgmt240;",     "Vladivostok" ],
[ "TZ_FIJI",                63,      false,  "+12:00",     "&?cmsgmt245;",     "Fiji, Marshall Is." ],
[ "TZ_MONTEVIDEO",          64,      false,  "-03:00",     "&?cmsgmt159;",     "Montevideo" ]
];
function isDaylightSavingsUsed(timeZoneIndex)
{
for ( var i=0; i<timeZoneArray.length; i++ )
{
var moduleIndex = timeZoneArray[i][1];
if ( moduleIndex == timeZoneIndex )
{
return timeZoneArray[i][2];
}
}
return false;
}
function timezoneChange()
{
var timeZoneIndex = getValue("Frm_LocalTimeZoneandName");
}
function pageLoad(url)
{
getObj("fSubmit").action = url;
moveErrLayer(580,95);
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
OldProcessRet(errstr, errpara);
pageGetValue();
}
function timeZoneArrayOrderFunc(ab, ac)
{
var abtime = ab[3];
var actime = ac[3];
abtime = abtime.replace(":", ".");
actime = actime.replace(":", ".");
abtime = parseFloat(abtime);
actime = parseFloat(actime);
if ( abtime - actime < 0 )
{
return -1;
}
else if ( abtime - actime > 0 )
{
return 1;
}
else
{
if ( ab[2] - ac[2] < 0 )
{
return -1;
}
else if ( ab[2] - ac[2] > 0 )
{
return 1;
}
else
{
return 0;
}
}
}
function pageGetValue()
{
timeZoneArray.sort( timeZoneArrayOrderFunc );
for ( var i=0; i<timeZoneArray.length; i++ )
{
var timeZoneTxt = "";
if ( "0:00" == timeZoneArray[i][3] )
{
timeZoneTxt = "(GMT) ";
}
else
{
timeZoneTxt = "(GMT" + timeZoneArray[i][3] + ") ";
}
timeZoneTxt += timeZoneArray[i][4];
addSelectOption("Frm_LocalTimeZoneandName", timeZoneArray[i][1], timeZoneTxt);
}
jslSetValue("Frm_LocalTimeZoneandName", "ZoneIndex");
setHTML("Fnt_CurrentLocalTime", getValue("CurrentLocalTime"));
jslSetValue("Frm_PollTimeInterval","PollTimeInterval");
if(getValue("Dscp") == "-1")
{
setValue("Frm_Dscp","");
}
else
{
jslSetValue("Frm_Dscp","Dscp");
}
jslSetValue("Frm_NtpServer1","NtpServer1");
jslSetValue("Frm_NtpServer2","NtpServer2");
CurrentLocalTimeCov();
}
function CurrentLocalTimeCov()
{
var temp_curloctime = getValue("CurrentLocalTime").replace("T", " ");
setHTML("Fnt_CurrentLocalTime", temp_curloctime);
}
function pageSetValue()
{
HiddenParaInit(USERIF_PARA);
jslSetValue("ZoneIndex","Frm_LocalTimeZoneandName");
setValue("AutoSetTzname", "1");
jslSetValue("PollTimeInterval","Frm_PollTimeInterval");
jslSetValue("Dscp","Frm_Dscp");
if(getValue("Frm_Dscp") == "")
{
setValue("Dscp","-1");
}
else
{
jslSetValue("Frm_Dscp","Dscp");
}
jslSetValue("NtpServer1","Frm_NtpServer1");
jslSetValue("NtpServer2","Frm_NtpServer2");
}
function ntpServerCheck(FrmID, FntID)
{
var varNtpServer = getValue(FrmID);
var num = checkDomainName(varNtpServer);
if (-3 == num)
{
msg = getmsg(102,0,64);
ShowErrorForCom(FrmID, FntID, msg);
return false;
}
if( num == false )
{
if ( checkIpAddress(varNtpServer) == false
<%
if ( 0 != getenv("DevIPv6Effect") )
{
%>
&& checkIPV6Address(varNtpServer) == false
<%
}
%>
)
{
msg = getmsg(134);
ShowErrorForCom(FrmID, FntID, msg);
return false;
}
if(varNtpServer == "0.0.0.0" || varNtpServer == "::")
{
msg = getmsg(134);
ShowErrorForCom(FrmID, FntID, msg);
return false;
}
}
return true;
}
function pageCheckValue()
{
var msg = "";
var msg1 = "";
var msg2 = "";
if ( false == ntpServerCheck("Frm_NtpServer1", "Fnt_NtpServer1") )
{
return false;
}
if ( false == ntpServerCheck("Frm_NtpServer2", "Fnt_NtpServer2") )
{
return false;
}
var varPollTimeInterval = getValue("Frm_PollTimeInterval");
if (checkNull(varPollTimeInterval) == false)
{
msg = getmsg(101);
ShowErrorForCom("Frm_PollTimeInterval","Fnt_PollTimeInterval",msg);
return false;
}
if (checkIntegerRange(varPollTimeInterval, 3600, 86400)!= true)
{
msg = getmsg(116,3600,86400);
ShowErrorForCom("Frm_PollTimeInterval","Fnt_PollTimeInterval",msg);
return false;
}
var value = getValue("Frm_Dscp");
if(value != "")
{
if (checkIntegerRange(value, 0, 63)!= true)
{
msg = getmsg(116,0,63);
ShowErrorForCom("Frm_Dscp","Fnt_Dscp",msg);
return false;
}
}
return true;
}
function pageSubmit()
{
var netlegth1 = getValue("Frm_NtpServer1").split(".");
var netlegth2 = getValue("Frm_NtpServer2").split(".");
if((checkDomainName(getValue("Frm_NtpServer1")) == false)&&(netlegth1.length == 4))
ReSetIpRmZero("Frm_NtpServer1");
if((checkDomainName(getValue("Frm_NtpServer2")) == false)&&(netlegth2.length == 4))
ReSetIpRmZero("Frm_NtpServer2");
ReSetValueRmZero("Frm_PollTimeInterval","Frm_Dscp");
if(pageCheckValue() == true)
{
pageSetValue();
setValue("IF_ACTION", "apply");
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function pageCancel()
{
DisableALL();
getObj("fSubmit").submit();
}
</script>