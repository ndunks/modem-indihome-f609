<script language="javascript">
var PPP_PARA = new Array(
"Enable",
"WANCName",
"ConnType",
"LANDViewName",
"StrServList",
"ServList",
"IsNAT",
"IsDefGW",
"IsForward",
"VLANID",
"Priority",
"WBDMode",
"IPAddress",
"SubnetMask",
"GateWay",
"DNS1",
"DNS2",
"DNS3",
"WorkIFMac",
"UpTime",
"ConnStatus",
"UserName",
"Password",
"MRU",
"MTU",
"ConnTrigger",
"TransType",
"AuthType",
"IdleTime",
"ConnError",
"DestAddress",
"ATMLinkType",
"ATMEncapsulation",
"ATMQoS",
"ATMPeakCellRate",
"ATMMaxBurstSize",
"ATMMinCellRate",
"ATMSCR",
"ATMCDV",
"RxPackets",
"TxPackets",
"RxBytes",
"TxBytes",
"EnableProxy",
"MaxUser",
"EnablePassThrough",
"ValidWANRx",
"ValidLANTx",
"HostTrigger"
);
var IP_PARA = new Array(
"Enable",
"WANCName",
"ConnType",
"LANDViewName",
"StrServList",
"ServList",
"IsNAT",
"IsDefGW",
"IsForward",
"VLANID",
"Priority",
"WBDMode",
"IPAddress",
"SubnetMask",
"GateWay",
"DNS1",
"DNS2",
"DNS3",
"WorkIFMac",
"UpTime",
"RemainLeaseTime",
"ConnStatus",
"Addressingtype",
"DestAddress",
"ATMLinkType",
"ATMEncapsulation",
"ATMQoS",
"ATMPeakCellRate",
"ATMMaxBurstSize",
"ATMMinCellRate",
"ATMSCR",
"ATMCDV",
"RxPackets",
"TxPackets",
"RxBytes",
"TxBytes",
"MTU"
);
var BRIDGE_PARA = new Array(
"Enable",
"WANCName",
"StrServList",
"ServList",
"VLANID",
"Priority",
"WBDMode",
"LANDViewName",
"DestAddress",
"ATMLinkType",
"ATMEncapsulation",
"ATMQoS",
"ATMPeakCellRate",
"ATMMaxBurstSize",
"ATMMinCellRate",
"ATMSCR",
"ATMCDV",
"RxPackets",
"TxPackets",
"RxBytes",
"TxBytes"
);
function pageLoad(url)
{
getObj("fSubmit").action = url;
var errstr= getValue("IF_ERRORSTR");
var errpara = getValue("IF_ERRORPARAM");
OldProcessRet(errstr, errpara);
moveErrLayer(590,110);
pageGetValue();
}
function refresh()
{
DisableALL();
getObj("fSubmit").submit();
}
function pageGetValue()
{
var pwdStr = "";
<%
var errorimg=getenv("ERROR");
%>
var err="<%=errorimg;%>";
if(err=="Y")
{
var msg = getmsg(166);
ShowErrorForCom(null, null, msg);
}
var key=getValue("IF_INDEX");
var wan_type=getValue("IF_TYPE");
if(wan_type==""||wan_type=="NULL")
{
wan_type="PPPoE";
}
switch(wan_type)
{
case "PPPoE":
{
jslDiDisplay("TABLE_static","TABLE_dhcp","TABLE_pppoa");
jslEnDisplay("TABLE_pppoe","TR_VLANID","TR_PRO",
"TR_WBDMode","TR_MTU");
setValue("Frm_mode","PPPoE");
break;
}
case "PPPoA":
{
jslDiDisplay("TABLE_static","TABLE_dhcp","TABLE_pppoe",
"TR_VLANID","TR_PRO","TR_WBDMode");
jslEnDisplay("TABLE_pppoa","TR_MTU");
jslDisable("Frm_DestAddress0");
setValue("Frm_mode","PPPoA");
break;
}
case "Static":
{
jslDiDisplay("TABLE_pppoe","TABLE_dhcp","TABLE_pppoa");
jslEnDisplay("TABLE_static","TR_VLANID","TR_PRO",
"TR_WBDMode","TR_MTU");
setValue("Frm_mode","Static");
break;
}
case "CIP":
{
jslDiDisplay("TABLE_pppoe","TABLE_dhcp","TABLE_pppoa","TR_VLANID",
"TR_PRO","TR_WBDMode");
jslEnDisplay("TABLE_static","TR_MTU");
jslDisable("Frm_DestAddress0");
setValue("Frm_mode","CIP");
break;
}
case "IPoA":
{
jslDiDisplay("TABLE_pppoe","TABLE_dhcp","TABLE_pppoa",
"TR_VLANID","TR_PRO","TR_WBDMode");
jslEnDisplay("TABLE_static","TR_MTU");
jslDisable("Frm_DestAddress0");
setValue("Frm_mode","IPoA");
break;
}
case "DHCP":
{
jslDiDisplay("TABLE_pppoe","TABLE_static","TABLE_pppoa");
jslEnDisplay("TABLE_dhcp","TR_VLANID","TR_PRO","TR_WBDMode","TR_MTU");
setValue("Frm_mode","DHCP");
break;
}
case "BRIDGE":
{
jslDiDisplay("TABLE_pppoe","TABLE_static","TABLE_pppoa","TR_MTU");
jslEnDisplay( "TR_VLANID","TR_PRO","TR_WBDMode");
setValue("Frm_mode","BRIDGE");
break;
}
default:
break;
}
if(wan_type == "CIP" || wan_type == "IPoA")
{
jslDiDisplay("TR_ATMEncapsulation");
}
else
{
jslEnDisplay("TR_ATMEncapsulation");
}
if( "PPPoE" == wan_type )
{
setValue("Frm_MTU","1492");
}
else
{
setValue("Frm_MTU","1500");
}
var wannameobj = getObj("Frm_WANCName0");
var wan_namenum = getValue("IF_INSTNUM");
for(var i=0; i< wan_namenum; i++)
{
var identity = getValue("IF_WANIDENTITY"+i);
var WANNAME = getValue("IF_WANNAME"+i);
wannameobj.options[i+1] = new Option(WANNAME,i);
}
var pvcobj = getObj("Frm_DestAddress0");
var pvcnum = getValue("IF_PVCNUM");
var j=0;
for(var i=0; i< pvcnum; i++)
{
var pvc = getValue("IF_PVC"+i);
var type = getValue("IF_TYPE"+i);
if(type!="PPPoA" && type!="CIP" && type!="IPoA")
{
pvcobj.options[j+1] = new Option(pvc, pvc);
j++;
}
}
if(key=="-1")
{
jslDiDisplay("Btn_DoEdit","Btn_Delete","TABLE_dhcp");
jslEnDisplay("Btn_Add","Btn_Cancel");
setValue("Frm_IdleTime","1200");
setValue("Frm_IdleTimea","1200");
setChecked("Frm_IsNAT",true);
setChecked("Frm_EnableProxy",false);
jslDisable("Frm_MaxUser");
setChecked("Frm_ValidWANRx",false);
setChecked("Frm_ValidLANTx",true);
setChecked("Frm_HostTrigger",true);
setChecked("Frm_ValidWANRxa",false);
setChecked("Frm_ValidLANTxa",true);
setChecked("Frm_HostTriggera",true);
}
else
{
jslDiDisplay("Btn_Add","Btn_Cancel");
jslEnDisplay("Btn_DoEdit","Btn_Delete");
for(var i=0; i< wan_namenum; i++)
{
var identity = getValue("IF_WANIDENTITY"+i);
var WANNAME = getValue("IF_WANNAME"+i);
if(WANNAME == getValue("WANCName"+key))
{
setValue("Frm_WANCName0",i);
}
}
jslSetValue("Frm_WANCName1","WANCName"+key);
var mode=getValue("Frm_mode");
jslDisable("Frm_mode");
if(wan_type!="PPPoA"&&wan_type!="IPoA"&&wan_type!="CIP")
{
jslSetValue("Frm_DestAddress0","DestAddress"+key);
jslSetValue("Frm_DestAddress1","DestAddress"+key);
jslDisable("Frm_DestAddress1");
}
if(wan_type=="PPPoA"||wan_type=="IPoA"||wan_type=="CIP")
{
jslSetValue("Frm_DestAddress1","DestAddress"+key);
jslDisable("Frm_DestAddress0");
}
if(mode != "BRIDGE")
{
if(getValue("IsNAT"+key)==1)
{
setChecked("Frm_IsNAT",true);
}
else
{
setChecked("Frm_IsNAT",false);
}
}
if(mode!="BRIDGE")
{
jslSetValue("Frm_MTU","MTU"+key);
}
if(wan_type!="PPPoA"&&wan_type!="CIP"&&wan_type!="IPoA")
{
if(getValue("WBDMode"+key)=="Tag_Drop")
{
setChecked("Frm_WBDMode",true);
jslSetValue("Frm_VLANID","VLANID"+key);
jslSetValue("Frm_Priority","Priority"+key);
}
else
{
setChecked("Frm_WBDMode",false);
setValue("Frm_VLANID","");
setValue("Frm_Priority","0");
}
}
jslSetValue("Frm_ATMEncapsulation","ATMEncapsulation"+key);
jslSetValue("Frm_ATMQoS","ATMQoS"+key);
var atm=getValue("Frm_ATMQoS");
ATMQoS();
if(atm=="UBR")
{
}
else if(atm=="CBR")
{
jslSetValue("Frm_ATMPeakCellRate","ATMPeakCellRate"+key);
}
else if(atm=="VBR-nrt"||atm=="VBR-rt")
{
jslSetValue("Frm_ATMPeakCellRate","ATMPeakCellRate"+key);
jslSetValue("Frm_ATMSCR","ATMSCR"+key);
jslSetValue("Frm_ATMMaxBurstSize","ATMMaxBurstSize"+key);
}
else
{
}
switch(wan_type)
{
case "PPPoE":
{
jslSetValue("Frm_UserName","UserName"+key);
jslSetValue("Frm_Password","Password"+key,"GET");
jslSetValue("Frm_EnableProxy","EnableProxy"+key);
jslSetValue("Frm_MaxUser","MaxUser"+key);
if (getValue("EnableProxy"+key)==1)
{
setChecked("Frm_EnableProxy",true);
jslEnable("Frm_MaxUser");
}
else if (getValue("EnableProxy"+key)==0)
{
setChecked("Frm_EnableProxy",false);
jslDisable("Frm_MaxUser");
}
else
{
}
jslSetValue("Frm_AuthType","AuthType"+key);
jslSetValue("Frm_ConnTrigger","ConnTrigger"+key);
jslSetValue("Frm_IdleTime","IdleTime"+key);
if (getValue("ValidWANRx"+key)==1)
{
setChecked("Frm_ValidWANRx",true);
}
else if (getValue("ValidWANRx"+key)==0)
{
setChecked("Frm_ValidWANRx",false);
}
else
{
}
if (getValue("ValidLANTx"+key)==1)
{
setChecked("Frm_ValidLANTx",true);
}
else if (getValue("ValidLANTx"+key)==0)
{
setChecked("Frm_ValidLANTx",false);
}
else
{
}
if (getValue("HostTrigger"+key)==1)
{
setChecked("Frm_HostTrigger",true);
}
else if (getValue("HostTrigger"+key)==0)
{
setChecked("Frm_HostTrigger",false);
}
else
{
}
ConnTrigger();
break;
}
case "PPPoA":
{
jslDisable("Frm_DestAddress0");
jslSetValue("Frm_UserNamea","UserName"+key);
jslSetValue("Frm_Passworda","Password"+key,"GET");
jslSetValue("Frm_AuthTypea","AuthType"+key);
jslSetValue("Frm_ConnTriggera","ConnTrigger"+key);
jslSetValue("Frm_IdleTimea","IdleTime"+key);
if (getValue("ValidWANRx"+key)==1)
{
setChecked("Frm_ValidWANRxa",true);
}
else if (getValue("ValidWANRx"+key)==0)
{
setChecked("Frm_ValidWANRxa",false);
}
else
{
}
if (getValue("ValidLANTx"+key)==1)
{
setChecked("Frm_ValidLANTxa",true);
}
else if (getValue("ValidLANTx"+key)==0)
{
setChecked("Frm_ValidLANTxa",false);
}
else
{
}
if (getValue("HostTrigger"+key)==1)
{
setChecked("Frm_HostTriggera",true);
}
else if (getValue("HostTrigger"+key)==0)
{
setChecked("Frm_HostTriggera",false);
}
else
{
}
ConnTriggera();
break;
}
case "Static":
{
jslSetValue("Frm_IPAddress","IPAddress"+key);
jslSetValue("Frm_SubnetMask","SubnetMask"+key);
jslSetValue("Frm_GateWay","GateWay"+key);
if(getValue("DNS1"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS1","DNS1"+key);
}
else
setValue("Frm_DNS1","");
if(getValue("DNS2"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS2","DNS2"+key);
}
else
setValue("Frm_DNS2","");
if(getValue("DNS3"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS3","DNS3"+key);
}
else
setValue("Frm_DNS3","");
break;
}
case "CIP":
{
jslSetValue("Frm_IPAddress","IPAddress"+key);
jslSetValue("Frm_SubnetMask","SubnetMask"+key);
jslSetValue("Frm_GateWay","GateWay"+key);
if(getValue("DNS1"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS1","DNS1"+key);
}
else
setValue("Frm_DNS1","");
if(getValue("DNS2"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS2","DNS2"+key);
}
else
setValue("Frm_DNS2","");
if(getValue("DNS3"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS3","DNS3"+key);
}
else
setValue("Frm_DNS3","");
break;
}
case "IPoA":
{
jslSetValue("Frm_IPAddress","IPAddress"+key);
jslSetValue("Frm_SubnetMask","SubnetMask"+key);
jslSetValue("Frm_GateWay","GateWay"+key);
if(getValue("DNS1"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS1","DNS1"+key);
}
else
setValue("Frm_DNS1","");
if(getValue("DNS2"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS2","DNS2"+key);
}
else
setValue("Frm_DNS2","");
if(getValue("DNS3"+key)!="0.0.0.0")
{
jslSetValue("Frm_DNS3","DNS3"+key);
}
else
setValue("Frm_DNS3","");
break;
}
case "DHCP":
{
jslEnDisplay("note");
var status = getValue("IF_STATUS");
if (status == "1")
{
var tem=getValue("IF_IDLE");
if(tem=="dhcprelease"||tem=="dhcprenew"||tem=="edit")
{
setValue("IF_IDLE","");
DisableALL();
setTimeout("refresh()", 6000);
}
else
{
if(getValue("ConnStatus"+key) == "Disconnected")
{
jslEnable("Btn_Renew");
jslDisable("Btn_Release");
}
else if(getValue("ConnStatus"+key) == "Connecting")
{
jslDisable("Btn_Renew");
jslEnable("Btn_Release");
}
else if (getValue("ConnStatus"+key) == "Unconfigured")
{
jslDisable("Btn_Renew","Btn_Release");
}
else
{
jslEnable("Btn_Renew","Btn_Release");
}
}
}
else
{
jslDisable("Btn_Renew");
jslDisable("Btn_Release");
}
break;
}
default:
break;
}
}
Change_WBDMode();
dispNAT();
return;
}
function Change_mode()
{
var mode=getValue("Frm_mode");
setValue("IF_NAME","&?wan002;");
if(mode=="PPPoE")
{
setValue("IF_TYPE", "PPPoE");
jslEnDisplay("TR_ATMEncapsulation");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="PPPoA")
{
setValue("IF_TYPE", "PPPoA");
jslEnDisplay("TR_ATMEncapsulation");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="Static")
{
setValue("IF_TYPE", "Static");
jslEnDisplay("TR_ATMEncapsulation");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="CIP")
{
setValue("IF_TYPE", "CIP");
jslDiDisplay("TR_ATMEncapsulation");
setValue("Frm_ATMEncapsulation","LLC");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="IPoA")
{
setValue("IF_TYPE", "IPoA");
jslDiDisplay("TR_ATMEncapsulation");
setValue("Frm_ATMEncapsulation","LLC");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="DHCP")
{
setValue("IF_TYPE", "DHCP");
jslEnDisplay("TR_ATMEncapsulation");
DisableALL();
getObj("fSubmit").submit();
}
else if(mode=="BRIDGE")
{
setValue("IF_TYPE", "BRIDGE");
jslEnDisplay("TR_ATMEncapsulation");
DisableALL();
getObj("fSubmit").submit();
}
else
{
}
}
function Change_Link()
{
var link=getValue("Frm_WANCName0");
if(link=="-1")
{
setValue("IF_INDEX", "-1");
setValue("IF_ACTION","");
setValue("IF_TYPE","PPPoE");
setValue("IF_MULTIDISPLAY","-1");
setValue("IF_NAME","&?wan002;");
DisableALL();
getObj("fSubmit").submit();
}
else
{
var obj=getObj("Frm_WANCName0");
var name=obj.options[obj.selectedIndex].text;
setValue("IF_NAME",name);
setValue("IF_ACTION","wanctype");
setValue("IF_INDEX", link);
setValue("IF_MULTIDISPLAY","0");
DisableALL();
getObj("fSubmit").submit();
}
}
function Change_type()
{
ATMQoS();
}
function ATMQoS()
{
var type=getValue("Frm_ATMQoS");
switch(type)
{
case "UBR":
{
jslDiDisplay("TR_pcr","TR_scr","TR_mbs");
break;
}
case "CBR":
{
jslDiDisplay("TR_scr","TR_mbs");
jslEnDisplay("TR_pcr");
break;
}
case "VBR-nrt":
{
jslEnDisplay("TR_pcr","TR_scr","TR_mbs");
break;
}
case "VBR-rt":
{
jslEnDisplay("TR_pcr","TR_scr","TR_mbs");
break;
}
default:
break;
}
return;
}
function change_enable()
{
if(getValue("Frm_DestAddress0")=="new")
{
setValue("Frm_DestAddress1","");
jslEnable("Frm_DestAddress1");
}
else
{
jslSetValue("Frm_DestAddress1","Frm_DestAddress0");
jslDisable("Frm_DestAddress1");
}
}
function Change_WBDMode()
{
if(getChecked("Frm_WBDMode")==true)
{
jslEnable("Frm_VLANID","Frm_Priority");
}
else
{
var link=getValue("Frm_WANCName0");
if(link=="-1")
{
setValue("Frm_VLANID", "");
setValue("Frm_Priority", "0");
}
else
{
var key=getValue("IF_INDEX");
jslSetValue("Frm_VLANID", "VLANID"+key);
jslSetValue("Frm_Priority", "Priority"+key);
}
jslDisable("Frm_VLANID","Frm_Priority");
}
}
function Change_Dialup()
{
ConnTrigger("user");
if (getValue("Frm_ConnTrigger") != "OnDemand")
{
var link=getValue("Frm_WANCName0");
if(link=="-1")
{
setValue("Frm_IdleTime", "1200");
setChecked("Frm_ValidWANRx",false);
setChecked("Frm_ValidLANTx",true);
setChecked("Frm_HostTrigger",true);
}
else
{
var key=getValue("IF_INDEX");
jslSetValue("Frm_IdleTime", "IdleTime"+key);
if (getValue("ValidWANRx"+key) == "0")
{
setChecked("Frm_ValidWANRx", false);
}
else
{
setChecked("Frm_ValidWANRx", true);
}
if (getValue("ValidLANTx"+key) == "0")
{
setChecked("Frm_ValidLANTx", false);
}
else
{
setChecked("Frm_ValidLANTx", true);
}
if (getValue("HostTrigger"+key) == "0")
{
setChecked("Frm_HostTrigger", false);
}
else
{
setChecked("Frm_HostTrigger", true);
}
}
}
}
function Change_Dialupa()
{
ConnTriggera("user");
if (getValue("Frm_ConnTrigger") != "OnDemand")
{
var link=getValue("Frm_WANCName0");
if(link=="-1")
{
setValue("Frm_IdleTimea", "1200");
setChecked("Frm_ValidWANRxa",false);
setChecked("Frm_ValidLANTxa",true);
setChecked("Frm_HostTriggera",true);
}
else
{
var key=getValue("IF_INDEX");
jslSetValue("Frm_IdleTimea", "IdleTime"+key);
if (getValue("ValidWANRx"+key) == "0")
{
setChecked("Frm_ValidWANRxa", false);
}
else
{
setChecked("Frm_ValidWANRxa", true);
}
if (getValue("ValidLANTx"+key) == "0")
{
setChecked("Frm_ValidLANTxa", false);
}
else
{
setChecked("Frm_ValidLANTxa", true);
}
if (getValue("HostTrigger"+key) == "0")
{
setChecked("Frm_HostTriggera", false);
}
else
{
setChecked("Frm_HostTriggera", true);
}
}
}
}
function ConnTrigger(caller)
{
var dailup=getValue("Frm_ConnTrigger");
switch(dailup)
{
case "AlwaysOn":
{
jslDisable("Frm_IdleTime");
jslDisable("Frm_ValidWANRx");
jslDisable("Frm_ValidLANTx");
jslDisable("Frm_HostTrigger");
jslDiDisplay("TR_connect");
break;
}
case "OnDemand":
{
jslEnable("Frm_IdleTime");
jslEnable("Frm_ValidWANRx");
jslEnable("Frm_ValidLANTx");
jslEnable("Frm_HostTrigger");
jslDiDisplay("TR_connect");
break;
}
case "Manual":
{
var key=getValue("IF_INDEX");
var tem=getValue("IF_IDLE");
if ( key == -1 )
{
jslDiDisplay("TR_connect");
}
else if ( "user" == caller )
{
if( getValue("ConnTrigger"+key) != "Manual" )
{
jslDiDisplay("TR_connect");
}
else
{
jslEnDisplay("TR_connect");
}
}
else if(tem=="pppconnect"||tem=="pppdisconnect"||tem=="edit")
{
ShowNote("", "&?cmn39;");
jslEnDisplay("TR_connect");
setValue("IF_IDLE","");
DisableALL();
setTimeout("refresh()", 6000);
}
else
{
var pppoeobject = getObj("Frm_WANCName0");
var pppoeIndex = pppoeobject.selectedIndex;
var pppoename = pppoeobject.options[pppoeIndex].text;
var status = getValue("IF_STATUS");
if(status == "1")
{
var pppnum = getValue("IF_PPPNUM");
for(var i=0;i<pppnum;i++)
{
var PPP_WANCName = getValue("IF_CONNNAME"+i);
var PPP_ConnStatus = getValue("IF_CONNSTATUS"+i);
if( PPP_WANCName == pppoename)
{
if( PPP_ConnStatus == "true")
{
jslDisable("Btn_Connect");
jslEnable("Btn_Disconnect");
}
else
{
jslDisable("Btn_Disconnect");
jslEnable("Btn_Connect");
}
}
}
}
else
{
jslDisable("Btn_Disconnect");
jslDisable("Btn_Connect");
}
jslEnDisplay("TR_connect");
}
jslDisable("Frm_IdleTime", "Frm_ValidWANRx",
"Frm_ValidLANTx", "Frm_HostTrigger");
break;
}
default:
break;
}
}
function ConnTriggera(caller)
{
var dailup=getValue("Frm_ConnTriggera");
switch(dailup)
{
case "AlwaysOn":
{
jslDisable("Frm_IdleTimea");
jslDisable("Frm_ValidWANRxa");
jslDisable("Frm_ValidLANTxa");
jslDisable("Frm_HostTriggera");
jslDiDisplay("TR_connecta");
break;
}
case "OnDemand":
{
jslEnable("Frm_IdleTimea");
jslEnable("Frm_ValidWANRxa");
jslEnable("Frm_ValidLANTxa");
jslEnable("Frm_HostTriggera");
jslDiDisplay("TR_connecta");
break;
}
case "Manual":
{
var key=getValue("IF_INDEX");
var tem=getValue("IF_IDLE");
if ( key == -1 )
{
jslDiDisplay("TR_connecta");
}
else if ( "user" == caller )
{
if( getValue("ConnTrigger"+key) != "Manual" )
{
jslDiDisplay("TR_connecta");
}
else
{
jslEnDisplay("TR_connecta");
}
}
else if(tem=="pppconnect"||tem=="pppdisconnect"||tem=="edit")
{
ShowNote("", "&?cmn39;");
jslEnDisplay("TR_connecta");
setValue("IF_IDLE","");
DisableALL();
setTimeout("refresh()", 6000);
}
else
{
var pppoeobject = getObj("Frm_WANCName0");
var pppoeIndex = pppoeobject.selectedIndex;
var pppoename = pppoeobject.options[pppoeIndex].text;
var status = getValue("IF_STATUS");
if(status == "1")
{
var pppnum = getValue("IF_PPPNUM");
for(var i=0;i<pppnum;i++)
{
var PPP_WANCName = getValue("IF_CONNNAME"+i);
var PPP_ConnStatus = getValue("IF_CONNSTATUS"+i);
if( PPP_WANCName == pppoename)
{
if( PPP_ConnStatus == "true")
{
jslDisable("Btn_Connecta");
jslEnable("Btn_Disconnecta");
}
else
{
jslDisable("Btn_Disconnecta");
jslEnable("Btn_Connecta");
}
}
}
}
else
{
jslDisable("Btn_Disconnecta", "Btn_Connecta");
}
jslEnDisplay("TR_connecta");
}
jslDisable("Frm_IdleTimea", "Frm_ValidWANRxa",
"Frm_ValidLANTxa", "Frm_HostTriggera");
break;
}
default:
break;
}
}
function Change_EnableProxy()
{
if (getChecked("Frm_EnableProxy")==true)
{
jslEnable("Frm_MaxUser");
}
else if (getChecked("Frm_EnableProxy")==false)
{
var link=getValue("Frm_WANCName0");
if(link=="-1")
{
setValue("Frm_MaxUser", "4");
}
else
{
var key=getValue("IF_INDEX");
jslSetValue("Frm_MaxUser", "MaxUser"+key);
}
jslDisable("Frm_MaxUser");
}
else
{
}
}
function dispNAT()
{
var  mode    = getValue("Frm_mode");
if(mode !== "BRIDGE")
jslEnDisplay("TR_nat");
else
jslDiDisplay("TR_nat");
}
function getmsg(id)
{
var str      = new Array();
str[0]   = new Array(128, "&?error_128;");
str[1]   = new Array(101, "&?error_101;");
str[2]   = new Array(102, "&?error_102;");
str[3]   = new Array(103, "&?error_103;");
str[4]   = new Array(114, "&?error_114;");
str[5]   = new Array(108, "&?error_108;");
str[6]   = new Array(115, "&?error_115;");
str[7]   = new Array(116, "&?error_116;");
str[8]   = new Array(117, "&?error_117;");
str[9]   = new Array(129, "&?error_129;");
str[10]  = new Array(126, "&?error_126;");
str[11]  = new Array(127, "&?error_127;");
str[12]  = new Array(123, "&?error_123;");
str[13]  = new Array(122, "&?error_122;");
str[14]  = new Array(118, "&?error_118;");
str[15]  = new Array(119, "&?error_119;");
str[16]  = new Array(109, "&?error_109;");
str[17]  = new Array(130, "&?error_130;");
str[18]  = new Array(147, "&?error_147;");
str[19]  = new Array(170, "&?error_170;");
str[20]  = new Array(171, "&?error_171;");
str[21]  = new Array(172, "&?error_172;");
str[22]  = new Array(173, "&?error_173;");
str[23]  = new Array(174, "&?error_174;");
str[24]  = new Array(166, "&?error_166;");
str[25]  = new Array(192, "&?error_192;");
return getMsgFormArray(str, arguments);
}
function pvcCheckValue()
{
var key=getValue("IF_INDEX");
var pvc0 = getValue("DestAddress"+key);
var dessadd = getValue("Frm_DestAddress0");
if(dessadd=="new")
{
var msg = "";
var pvcnum = getValue("IF_PVCNUM");
for(var i=0; i< pvcnum; i++)
{
var pvc = getValue("IF_PVC"+i);
if(getValue("Frm_DestAddress1")==pvc &&
getValue("Frm_DestAddress1")!=pvc0)
{
msg = getmsg(128);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
}
}
else
{
if(pvc0 != dessadd && getValue("Frm_mode") !="PPPoA")
{
msg = getmsg(128);
ShowErrorForCom("Frm_DestAddress0","Fnt_DestAddress0",msg);
return false;
}
}
return true;
}
function pageCheckValue()
{
var msg="";
var wancname = getValue("Frm_WANCName0");
var name = getValue("Frm_WANCName1");
var obj=getObj("Frm_WANCName0");
var name0=obj.options[obj.selectedIndex].text;
if(name=="")
{
msg = getmsg(101);
ShowErrorForCom("Frm_WANCName1","Fnt_WANCName1",msg);
return false;
}
var wan_namenum = getValue("IF_INSTNUM");
for(var i=0; i< wan_namenum; i++)
{
var WANNAME = getValue("IF_WANNAME"+i);
if(name==WANNAME&&name!=name0)
{
msg = getmsg(128);
ShowErrorForCom("Frm_WANCName1","Fnt_WANCName1",msg);
return false;
}
}
if(Check_StrLengthRange(name,1,256,"Frm_WANCName1","Fnt_WANCName1")!=true)
{
return false;
}
if(checkGenString(name)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_WANCName1","Fnt_WANCName1",msg);
return false;
}
if(getChecked("Frm_WBDMode")==true)
{
var vlan=getValue("Frm_VLANID");
if(Check_IntegerRange(vlan,0,4094,"Frm_VLANID","Fnt_VLANID")!=true)
{
return false;
}
}
var pvc = getValue("Frm_DestAddress1");
if(pvc=="")
{
msg =  getmsg(101);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
else if(pvc=="0/0")
{
msg =  getmsg(129);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
else
{
}
var parts = pvc.split("/");
if(parts.length!=2)
{
msg =  getmsg(129);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
else
{
if(Check_IntegerRange(parts[0],0,255,"Frm_DestAddress1","VPI")!=true)
{
return false;
}
if(Check_IntegerRange(parts[1],0,65535,"Frm_DestAddress1","VCI")!=true)
{
return false;
}
}
var wantype = getValue("Frm_mode");
var pvcnum = getValue("IF_PVCNUM");
if(wantype=="PPPoA"||wantype=="IPoA"||wantype=="CIP")
{
for(var i=0; i< pvcnum; i++)
{
var pvc = getValue("IF_PVC"+i);
if(wancname=="-1")
{
if(getValue("Frm_DestAddress1")==pvc)
{
msg = getmsg(128);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
}
else
{
var index = getValue("IF_INDEX");
var config_pvc = getValue("DestAddress"+index);
if(getValue("Frm_DestAddress1")==pvc &&
getValue("Frm_DestAddress1") != config_pvc)
{
msg = getmsg(128);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
}
}
}
else
{
for(var i=0; i< pvcnum; i++)
{
var pvc = "";
var type = getValue("IF_TYPE"+i);
if(type=="PPPoA" || type=="CIP" || type=="IPoA")
{
var pvc = getValue("IF_PVC"+i);
}
if(getValue("Frm_DestAddress1")==pvc)
{
msg = getmsg(128);
ShowErrorForCom("Frm_DestAddress1","Fnt_DestAddress1",msg);
return false;
}
}
}
var atm=getValue("Frm_ATMQoS");
if(atm=="UBR")
{
}
else if(atm=="CBR")
{
if(Check_IntegerRange(getValue("Frm_ATMPeakCellRate"),1,20000,
"Frm_ATMPeakCellRate","Fnt_ATMPeakCellRate")!=true)
{
return false;
}
}
else if(atm=="VBR-nrt"||atm=="VBR-rt")
{
if(Check_IntegerRange(getValue("Frm_ATMPeakCellRate"),2,20000,
"Frm_ATMPeakCellRate","Fnt_ATMPeakCellRate")!=true)
{
return false;
}
var temp = getValue("Frm_ATMPeakCellRate");
if(Check_IntegerRange(getValue("Frm_ATMSCR"), 1, temp-1,
"Frm_ATMSCR","Fnt_ATMSCR")!=true)
{
return false;
}
if(Check_MBS(getValue("Frm_ATMMaxBurstSize"),
Number(getValue("Frm_ATMSCR")),
Number(getValue("Frm_ATMPeakCellRate")),
"Frm_ATMMaxBurstSize","Fnt_ATMMaxBurstSize")!=true)
{
return false;
}
}
else
{
}
var mode = getValue("Frm_mode");
if(mode != "BRIDGE")
{
var MTU = getValue("Frm_MTU");
}
if(mode=="PPPoE")
{
var MaxMTU = 1492;
var MaxPPPoEMTU = getValue("IF_MaxPPPoEMTU");
MaxMTU = parseInt(MaxPPPoEMTU, 10);
var bCheckPass = Check_IntegerRange(MTU, 128, MaxMTU,
"Frm_MTU","Fnt_MTU");
if( bCheckPass != true )
{
return false;
}
var username = getValue("Frm_UserName");
if(checkGenStringForASC(username)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_UserName","Fnt_UserName",msg);
return false;
}
if(Check_StrLengthRange(username,1,64,"Frm_UserName",
"Fnt_UserName")!=true)
{
return false;
}
var pass = getValue("Frm_Password");
if(checkGenStringForASC(pass)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_Password","Fnt_Password",msg);
return false;
}
var pass_range=checkStrLengthRange(pass,0,64);
if(pass_range==-3)
{
msg =  getmsg(102,0,64);
ShowErrorForCom("Frm_Password","Fnt_Password",msg);
return false;
}
<% var ProxyMaxUser = get_config("ProxyMaxUser"); %>
var  MaxUserNum =  <%  =ProxyMaxUser; %> ;
if (getChecked("Frm_EnableProxy")==true)
{
if (checkNull(getValue("Frm_MaxUser")) != true)
{
msg = getmsg(101);
ShowErrorForCom("Frm_MaxUser","Fnt_MaxUser",msg);
return false;
}
if(checkInteger(getValue("Frm_MaxUser")) != true)
{
msg = getmsg(115);
ShowErrorForCom("Frm_MaxUser","Fnt_MaxUser",msg);
return false;
}
if(checkIntegerRange(getValue("Frm_MaxUser"), 1,
MaxUserNum) != true)
{
msg = getmsg(116,1,MaxUserNum);
ShowErrorForCom("Frm_MaxUser","Fnt_MaxUser",msg);
return false;
}
}
var idletime = getValue("Frm_IdleTime");
if(getValue("Frm_ConnTrigger")=="OnDemand")
{
if(Check_IntegerRange(idletime,0,4294967295,"Frm_IdleTime",
"Fnt_IdleTime")!=true)
{
return false;
}
}
}
else if(mode=="PPPoA")
{
if(Check_IntegerRange(MTU,128,1540,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
var username = getValue("Frm_UserNamea");
if(checkGenStringForASC(username)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_UserNamea","Fnt_UserNamea",msg);
return false;
}
if(Check_StrLengthRange(username,1,64,"Frm_UserNamea",
"Fnt_UserNamea")!=true)
{
return false;
}
var pass = getValue("Frm_Passworda");
if(checkGenStringForASC(pass)!=true)
{
msg = getmsg(114);
ShowErrorForCom("Frm_Passworda","Fnt_Passworda",msg);
return false;
}
var pass_range=checkStrLengthRange(pass,0,64);
if(pass_range==-3)
{
msg =  getmsg(102,0,64);
ShowErrorForCom("Frm_Passworda","Fnt_Passworda",msg);
return false;
}
var idletime = getValue("Frm_IdleTimea");
if(getValue("Frm_ConnTriggera")=="OnDemand")
{
if(Check_IntegerRange(idletime,0,4294967295,"Frm_IdleTimea",
"Fnt_IdleTimea")!=true)
{
return false;
}
}
}
else if(mode=="Static"||mode=="CIP"||mode=="IPoA")
{
var ip = getValue("Frm_IPAddress");
if(Check(ip,"Frm_IPAddress","Fnt_IPAddress")!=true)
{
return false;
}
else if(checkIpAddress(ip,"")!=true)
{
msg =  getmsg(108);
ShowErrorForCom("Frm_IPAddress","Fnt_IPAddress",msg);
return false;
}
else
{
}
var mask = getValue("Frm_SubnetMask");
if(Check(mask,"Frm_SubnetMask","Fnt_SubnetMask")!=true)
{
return false;
}
else if(checkMaskAddress(mask)!=true)
{
msg =  getmsg(109);
ShowErrorForCom("Frm_SubnetMask","Fnt_SubnetMask",msg);
return false;
}
else
{
}
if(checkIPNet(ip,mask)!=true)
{
msg = getmsg(126);
ShowErrorForCom("Frm_SubnetMask","Fnt_SubnetMask",msg);
return false;
}
var gateway = getValue("Frm_GateWay");
if(Check(gateway,"Frm_GateWay","Fnt_GateWay")!=true)
{
return false;
}
else if(checkGateway(gateway)== false)
{
msg =  getmsg(130);
ShowErrorForCom("Frm_GateWay","Fnt_GateWay",msg);
return false;
}
else
{
}
var DNS1=getValue("Frm_DNS1");
if(DNS1!="")
{
if(Check_DNS(DNS1,"Frm_DNS1","Fnt_DNS1")!=true)
{
return false;
}
}
var DNS2=getValue("Frm_DNS2");
if(DNS2!="")
{
if(Check_DNS(DNS2,"Frm_DNS2","Fnt_DNS2")!=true)
{
return false;
}
}
var DNS3=getValue("Frm_DNS3");
if(DNS3!="")
{
if(Check_DNS(DNS3,"Frm_DNS3","Fnt_DNS3")!=true)
{
return false;
}
}
}
else
{
}
if(mode=="Static")
{
if(Check_IntegerRange(MTU,128,1500,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
}
else if(mode=="DHCP")
{
if(Check_IntegerRange(MTU,576,1500,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
}
else if(mode=="IPoA")
{
if(Check_IntegerRange(MTU,128,1500,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
}
else if(mode=="CIP")
{
if(Check_IntegerRange(MTU,128,9180,"Frm_MTU","Fnt_MTU")!=true)
{
return false;
}
}
else
{
}
return true;
}
function Check_DNS(value,Frm,Fnt)
{
if(checkIpAddress(value,"")!=true)
{
msg =  getmsg(108);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
if(value=="0.0.0.0")
{
msg =  getmsg(108);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
return true;
}
function Check_StrLengthRange(value,min,max,Frm,Fnt)
{
var temp = checkStrLengthRange(value,min,max);
if(temp==-1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(temp==-3)
{
msg =  getmsg(102,min,max);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else
{
}
return true;
}
function Check_IntegerRange(value,min,max,Frm,Fnt)
{
var tem = checkIntegerRange(value,min,max);
if(tem==-1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-2)
{
msg = getmsg(115);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-3)
{
msg = getmsg(116,min,max);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else
{
}
return true;
}
function Check_MBS(value, scrValue, pcrValue, Frm,Fnt)
{
var tmpDeno = pcrValue - scrValue;
var tmpMole = pcrValue * scrValue;
var tmpMax = Math.floor(tmpMole/tmpDeno) + 1;
if(scrValue >= pcrValue)
{
msg = getmsg(147);
ShowErrorForCom(null,null,msg);
return false;
}
var tem = checkIntegerRange(value,1,tmpMax);
if(tem==-1)
{
msg = getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-2)
{
msg = getmsg(115);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else if(tem==-3)
{
msg = getmsg(116, 1, tmpMax);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
else
{
}
return true;
}
function Check(value,Frm,Fnt)
{
if(value=="")
{
msg =  getmsg(101);
ShowErrorForCom(Frm,Fnt,msg);
return false;
}
return true;
}
function pageSetValue()
{
var number = getValue("IF_INSTNUM");
var mode=getValue("Frm_mode");
var wanc_value=getValue("Frm_WANCName0");
var index;
if(wanc_value==-1)
{
index=number;
}
else
{
index=getValue("Frm_WANCName0");
}
switch(mode)
{
case "PPPoE":
{
HiddenMultiInstParaInit(PPP_PARA, index);
for(var j=0; j<PPP_PARA.length; j++)
{
val = PPP_PARA[j];
PPP_PARA[j] = "NULL";
}
setValue("TransType"+index,"PPPoE");
setValue("IF_TYPE","PPPoE");
setValue("ATMLinkType"+index,"EoA");
jslSetValue("UserName"+index,"Frm_UserName");
jslSetValue("Password"+index,"Frm_Password","SET");
if (getChecked("Frm_EnableProxy")==true)
{
setValue("EnableProxy"+index, 1);
jslSetValue("MaxUser"+index,"Frm_MaxUser");
}
else if (getChecked("Frm_EnableProxy")==false)
{
setValue("EnableProxy"+index, 0);
}
else
{
}
jslSetValue("AuthType"+index,"Frm_AuthType");
jslSetValue("ConnTrigger"+index,"Frm_ConnTrigger");
if(getValue("Frm_ConnTrigger")=="OnDemand")
{
jslSetValue("IdleTime"+index,"Frm_IdleTime");
if (getChecked("Frm_ValidWANRx")==true)
{
setValue("ValidWANRx"+index,"1");
}
else if (getChecked("Frm_ValidWANRx")==false)
{
setValue("ValidWANRx"+index, "0");
}
else
{
}
if (getChecked("Frm_ValidLANTx")==true)
{
setValue("ValidLANTx"+index,"1");
}
else if (getChecked("Frm_ValidLANTx")==false)
{
setValue("ValidLANTx"+index, "0");
}
else
{
}
if (getChecked("Frm_HostTrigger")==true)
{
setValue("HostTrigger"+index,"1");
}
else if (getChecked("Frm_HostTrigger")==false)
{
setValue("HostTrigger"+index, "0");
}
else
{
}
}
break;
}
case "PPPoA":
{
HiddenMultiInstParaInit(PPP_PARA, index);
for(var j=0; j<PPP_PARA.length; j++)
{
val = PPP_PARA[j];
PPP_PARA[j] = "NULL";
}
setValue("TransType"+index,"PPPoA");
setValue("IF_TYPE","PPPoA");
var usercount = getValue("Frm_UserNamea");
setValue("UserName"+index,usercount);
setValue("ATMLinkType"+index,"PPPoA");
jslSetValue("Password"+index,"Frm_Passworda","SET");
jslSetValue("AuthType"+index,"Frm_AuthTypea");
jslSetValue("ConnTrigger"+index,"Frm_ConnTriggera");
if(getValue("Frm_ConnTriggera")=="OnDemand")
{
jslSetValue("IdleTime"+index,"Frm_IdleTimea");
if (getChecked("Frm_ValidWANRxa")==true)
{
setValue("ValidWANRx"+index,"1");
}
else if (getChecked("Frm_ValidWANRxa")==false)
{
setValue("ValidWANRx"+index, "0");
}
else
{
}
if (getChecked("Frm_ValidLANTxa")==true)
{
setValue("ValidLANTx"+index,"1");
}
else if (getChecked("Frm_ValidLANTxa")==false)
{
setValue("ValidLANTx"+index, "0");
}
else
{
}
if (getChecked("Frm_HostTriggera")==true)
{
setValue("HostTrigger"+index,"1");
}
else if (getChecked("Frm_HostTriggera")==false)
{
setValue("HostTrigger"+index, "0");
}
else
{
}
}
break;
}
case "Static":
{
HiddenMultiInstParaInit(IP_PARA, index);
for(var j=0; j<IP_PARA.length; j++)
{
val = IP_PARA[j];
IP_PARA[j] = "NULL";
}
setValue("Addressingtype"+index,"Static");
setValue("IF_TYPE","Static");
setValue("ATMLinkType"+index,"EoA");
jslSetValue("IPAddress"+index,"Frm_IPAddress");
jslSetValue("SubnetMask"+index,"Frm_SubnetMask");
jslSetValue("GateWay"+index,"Frm_GateWay");
if( "" == getValue("DNS1"+index))
setValue("DNS1"+index,"0.0.0.0");
else
jslSetValue("DNS1"+index,"Frm_DNS1");
if( "" == getValue("DNS2"+index))
setValue("DNS2"+index,"0.0.0.0");
else
jslSetValue("DNS2"+index,"Frm_DNS2");
if( "" == getValue("DNS3"+index))
setValue("DNS3"+index,"0.0.0.0");
else
jslSetValue("DNS3"+index,"Frm_DNS3");
break;
}
case "CIP":
{
HiddenMultiInstParaInit(IP_PARA, index);
for(var j=0; j<IP_PARA.length; j++)
{
val = IP_PARA[j];
IP_PARA[j] = "NULL";
}
setValue("Addressingtype"+index,"Static");
setValue("IF_TYPE","CIP");
setValue("ATMLinkType"+index,"CIP");
jslSetValue("IPAddress"+index,"Frm_IPAddress");
jslSetValue("SubnetMask"+index,"Frm_SubnetMask");
jslSetValue("GateWay"+index,"Frm_GateWay");
if( "" == getValue("DNS1"+index))
setValue("DNS1"+index,"0.0.0.0");
else
jslSetValue("DNS1"+index,"Frm_DNS1");
if( "" == getValue("DNS2"+index))
setValue("DNS2"+index,"0.0.0.0");
else
jslSetValue("DNS2"+index,"Frm_DNS2");
if( "" == getValue("DNS3"+index))
setValue("DNS3"+index,"0.0.0.0");
else
jslSetValue("DNS3"+index,"Frm_DNS3");
break;
}
case "IPoA":
{
HiddenMultiInstParaInit(IP_PARA, index);
for(var j=0; j<IP_PARA.length; j++)
{
val = IP_PARA[j];
IP_PARA[j] = "NULL";
}
setValue("Addressingtype"+index,"Static");
setValue("IF_TYPE","IPoA");
setValue("ATMLinkType"+index,"IPoA");
jslSetValue("IPAddress"+index,"Frm_IPAddress");
jslSetValue("SubnetMask"+index,"Frm_SubnetMask");
jslSetValue("GateWay"+index,"Frm_GateWay");
if( "" == getValue("DNS1"+index))
setValue("DNS1"+index,"0.0.0.0");
else
jslSetValue("DNS1"+index,"Frm_DNS1");
if( "" == getValue("DNS2"+index))
setValue("DNS2"+index,"0.0.0.0");
else
jslSetValue("DNS2"+index,"Frm_DNS2");
if( "" == getValue("DNS3"+index))
setValue("DNS3"+index,"0.0.0.0");
else
jslSetValue("DNS3"+index,"Frm_DNS3");
break;
}
case "DHCP":
{
HiddenMultiInstParaInit(IP_PARA, index);
for(var j=0; j<IP_PARA.length; j++)
{
val = IP_PARA[j];
IP_PARA[j] = "NULL";
}
setValue("Addressingtype"+index,"DHCP");
setValue("IF_TYPE","DHCP");
setValue("ATMLinkType"+index,"EoA");
break;
}
case "BRIDGE":
{
HiddenMultiInstParaInit(BRIDGE_PARA, index);
for(var j=0; j<BRIDGE_PARA.length; j++)
{
val = BRIDGE_PARA[j];
BRIDGE_PARA[j] = "NULL";
}
setValue("IF_TYPE","BRIDGE");
setValue("ATMLinkType"+index,"EoA");
break;
}
default:
break;
}
if(wanc_value==-1)
{
jslSetValue("WANCName"+index,"Frm_WANCName1");
jslSetValue("IF_NAME","Frm_WANCName1");
}
else
{
jslSetValue("WANCName"+index,"Frm_WANCName1");
jslSetValue("IF_NAME","Frm_WANCName1");
}
setValue("IF_INDEX",index);
if(mode != "BRIDGE")
{
if(getChecked("Frm_IsNAT")==true)
{
setValue("IsNAT"+index, "1");
}
else
{
setValue("IsNAT"+index, "0");
}
}
if(mode!="BRIDGE")
{
jslSetValue("MTU"+index,"Frm_MTU");
}
if(mode !="PPPoA"&& mode !="CIP" && mode !="IPoA")
{
if(getChecked("Frm_WBDMode")==true)
{
setValue("WBDMode"+index, "Tag_Drop");
jslSetValue("VLANID"+index,"Frm_VLANID");
jslSetValue("Priority"+index,"Frm_Priority");
}
else
{
setValue("WBDMode"+index, "Transparent");
setValue("VLANID"+index,"0");
setValue("Priority"+index,"0");
}
}
setValue("Enable"+index, "1");
jslSetValue("ATMEncapsulation"+index,"Frm_ATMEncapsulation");
jslSetValue("DestAddress"+index,"Frm_DestAddress1");
jslSetValue("ATMQoS"+index,"Frm_ATMQoS");
var atm=getValue("Frm_ATMQoS");
if(atm=="UBR")
{
}
else if(atm=="CBR")
{
jslSetValue("ATMPeakCellRate"+index,"Frm_ATMPeakCellRate");
}
else if(atm=="VBR-rt"||atm=="VBR-nrt")
{
jslSetValue("ATMPeakCellRate"+index,"Frm_ATMPeakCellRate");
jslSetValue("ATMSCR"+index,"Frm_ATMSCR");
jslSetValue("ATMMaxBurstSize"+index,"Frm_ATMMaxBurstSize");
setValue("ATMMinCellRate"+index,"0");
}
else
{
}
}
function  ReSetPVCRmZero(ID)
{
var pvc = getValue(ID);
var parts = pvc.split("/");
var msg;
var obj;
if(parts.length!=2)
{
return false;
}
for(i = 0;i < parts.length; i++)
{
obj = parts[i];
if(obj != null &&  obj != "")
{
while(obj.indexOf("0") == 0 && obj.length > 1)
{
obj = obj.substr(1);
}
parts[i]=obj;
}
if(i==0)
{
msg = parts[i];
}
else
{
var msg = parts[i-1]+"/"+parts[i];
}
}
setValue(ID,msg);
}
function  ReSetPVCLIstRmZero(ID)
{
var pvc = getValue(ID);
var pvc_list = pvc.split(",");
var obj,msg,buf;
for(var i=0;i<pvc_list.length;i++)
{
var pvcpara = pvc_list[i].split("/");
if(pvcpara.length != 2)
{
return false;
}
for(j = 0;j < pvcpara.length; j++)
{
obj = pvcpara[j];
if(obj != null &&  obj != "")
{
while(obj.indexOf("0") == 0 && obj.length > 1)
{
obj = obj.substr(1);
}
pvcpara[j]=obj;
}
if(j==0)
{
msg = pvcpara[j];
}
else
{
var msg = pvcpara[j-1]+"/"+pvcpara[j];
}
}
if(i==0)
{
buf = msg;
}
else
{
buf=buf+","+msg;
}
}
setValue(ID,buf);
}
function pageAdd()
{
ReSetIpRmZero("Frm_IPAddress","Frm_SubnetMask","Frm_GateWay","Frm_DNS1",
"Frm_DNS2","Frm_DNS3");
ReSetValueRmZero("Frm_ATMPeakCellRate","Frm_ATMSCR","Frm_ATMMaxBurstSize",
"Frm_IdleTime","Frm_Priority","Frm_MaxUser","Frm_VLANID",
"Frm_IdleTimea","Frm_MTU");
ReSetPVCRmZero("Frm_DestAddress1");
if(pageCheckValue()==true)
{
pageSetValue();
setValue("IF_ACTION","new");
if(getValue("Frm_mode")=="DHCP")
{
setValue("IF_IDLE","edit");
}
setValue("IF_MULTIDISPLAY","0");
DisableALL();
getObj("fSubmit").submit();
}
}
function pageCancel()
{
DisableALL();
document.getElementById("fSubmit").submit();
}
function pageEdit()
{
ReSetIpRmZero("Frm_IPAddress","Frm_SubnetMask","Frm_GateWay","Frm_DNS1",
"Frm_DNS2","Frm_DNS3");
ReSetValueRmZero("Frm_ATMPeakCellRate","Frm_ATMSCR","Frm_ATMMaxBurstSize",
"Frm_IdleTime","Frm_Priority","Frm_MaxUser","Frm_VLANID",
"Frm_IdleTimea","Frm_MTU");
ReSetPVCRmZero("Frm_DestAddress1");
if(pvcCheckValue()== true&&pageCheckValue()==true)
{
pageSetValue();
setValue("IF_ACTION","apply");
if(getValue("Frm_mode")=="PPPoE"||getValue("Frm_mode")=="DHCP"||
getValue("Frm_mode")=="PPPoA")
{
setValue("IF_IDLE","edit");
}
setValue("IF_MULTIDISPLAY","0");
DisableALL();
getObj("fSubmit").submit();
}
}
function pageDel()
{
setValue("IF_INDEX",getValue("Frm_WANCName0"));
setValue("IF_MODE",getValue("Frm_mode"));
setValue("IF_ACTION","delete");
DisableALL();
getObj("fSubmit").submit();
}
function PPP_connect()
{
setValue("IF_INDEX",getValue("Frm_WANCName0"));
setValue("IF_MODE",getValue("Frm_mode"));
setValue("IF_ACTION", "pppconnect");
setValue("IF_IDLE","pppconnect");
DisableALL();
getObj("fSubmit").submit();
}
function PPP_disconnect()
{
setValue("IF_INDEX",getValue("Frm_WANCName0"));
setValue("IF_MODE",getValue("Frm_mode"));
setValue("IF_ACTION", "pppdisconnect");
setValue("IF_IDLE","pppdisconnect");
DisableALL();
getObj("fSubmit").submit();
}
function dhcp_release()
{
setValue("IF_INDEX",getValue("Frm_WANCName0"));
setValue("IF_MODE",getValue("Frm_mode"));
setValue("IF_ACTION", "dhcprelease");
setValue("IF_IDLE","dhcprelease");
DisableALL();
getObj("fSubmit").submit();
}
function dhcp_renew()
{
setValue("IF_INDEX",getValue("Frm_WANCName0"));
setValue("IF_MODE",getValue("Frm_mode"));
setValue("IF_ACTION", "dhcprenew");
setValue("IF_IDLE","dhcprenew");
DisableALL();
getObj("fSubmit").submit();
}
</script>